{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"measure-main\"\n};\nconst _hoisted_2 = {\n  class: \"contents\"\n};\nconst _hoisted_3 = {\n  class: \"background\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"height\": \"140vh\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"header-page\",\n  style: {\n    \"margin\": \"0\"\n  }\n}, [/*#__PURE__*/_createTextVNode(\"탄소 중립 시나리오 한눈에 보기\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"subHeader-page\"\n}, \"Predicted Carbon emission Overview\")], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  style: {\n    \"height\": \"15vh\"\n  }\n};\nconst _hoisted_7 = {\n  style: {\n    \"height\": \"10vh\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_navigation = _resolveComponent(\"navigation\");\n  const _component_scenario_header = _resolveComponent(\"scenario_header\");\n  const _component_dash1_footprint = _resolveComponent(\"dash1_footprint\");\n  const _component_dash1_scopeChart = _resolveComponent(\"dash1_scopeChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_navigation, {\n    class: \"navigation\"\n  }), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_scenario_header), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"select\", {\n    class: \"select_group\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selected_company = $event),\n    onChange: _cache[1] || (_cache[1] = $event => $setup.change_company())\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.group_list, item => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: item\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, $setup.selected_company]]), _hoisted_5, _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_dash1_footprint, {\n    class: \"dash\"\n  })]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_dash1_scopeChart, {\n    class: \"dash\"\n  })])])])])])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_navigation","_hoisted_2","_component_scenario_header","_hoisted_3","_hoisted_4","$setup","selected_company","$event","onChange","_cache","change_company","_Fragment","_renderList","group_list","item","key","_toDisplayString","_hoisted_5","_hoisted_6","_component_dash1_footprint","_hoisted_7","_component_dash1_scopeChart"],"sources":["C:\\Users\\ohminjin\\Desktop\\캡스톤\\co2-emission-management\\vueProject\\src\\views\\Scenario\\carbonScenarioPreview.vue"],"sourcesContent":["<template>\r\n    <div class=\"measure-main\">\r\n        <navigation class=\"navigation\"/>\r\n        <div class=\"contents\">\r\n            <scenario_header/>\r\n            <div class=\"background\">\r\n              <div style=\"height:140vh;\">\r\n                <select class=\"select_group\" v-model=\"selected_company\" @change=\"change_company()\">\r\n                  <option v-for=\"item in group_list\" :key=\"item\">{{ item }}</option>\r\n                </select>\r\n                  <p class=\"header-page\" style=\"margin:0\">탄소 중립 시나리오 한눈에 보기<br>\r\n                      <span class=\"subHeader-page\">Predicted Carbon emission Overview</span>\r\n                  </p>\r\n                  <div>\r\n                    <div style=\"height:15vh\"><dash1_footprint class=\"dash\"/></div>\r\n                    <div style=\"height: 10vh;\"><dash1_scopeChart class=\"dash\"/></div>\r\n                </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </template>\r\n  \r\n  \r\n  <style>\r\n\r\n  </style>\r\n  \r\n  <script>\r\n  import navigation from \"@/components/Navigation.vue\"\r\n  import scenario_header from \"@/components/scenario/Header.vue\"\r\n  import dash1_footprint from \"@/components/scenario/dash1/totalCarbonFootprint.vue\"\r\n  import dash1_scopeChart from \"@/components/scenario/dash1/scopeRatio.vue\"\r\n  import axios from \"axios\"\r\n  import { useStore } from \"vuex\"\r\n  import {computed, ref} from \"vue\"\r\n  \r\n    export default {\r\n        name :\"scenario\",\r\n        components:{\r\n            navigation,\r\n            scenario_header,\r\n            dash1_footprint,\r\n            dash1_scopeChart\r\n        },\r\n        setup() {\r\n            const store = useStore();\r\n            var month = computed(() => store.state.insight_month+1);\r\n            var year = computed(() => store.state.insight_year);\r\n            var scope1 = ref(0)\r\n            var scope2 = ref(0)\r\n            var scope3 = ref(0)\r\n            var total_emission = ref(0)\r\n            var rerender_signal = ref(0)\r\n            var group_list = computed(() => store.state.group_list).value\r\n            var selected_company = ref(group_list[0])\r\n\r\n            function change_company(){\r\n                store.commit(\"insight_select_company\",selected_company.value);\r\n                console.log(\"11111111111111111111111111111111\"+ store.state.insight_selected_company)\r\n                get_total_emission_month()\r\n                get_total_emission_year()\r\n            }\r\n\r\n            async function get_total_emission_month(){\r\n                await axios.get(\"Company/Preview/\"+selected_company.value+\"/\"+year.value+\"-\"+month.value+\"-01/\"+year.value+\"-\"+month.value+\"-28\",config).then(res => {\r\n                    console.log(res.data)\r\n                    console.log(\"연월\"+year.value+month.value)\r\n                    scope1.value = res.data.Scopes[0]\r\n                    scope2.value = res.data.Scopes[1]\r\n                    scope3.value = res.data.Scopes[2]\r\n                    total_emission  = res.data.Scopes.reduce((a, b) => a + b, 0)\r\n                    store.commit(\"set_scopes\",res.data.Scopes);\r\n                    store.commit(\"SetDetailEmission\",res.data.EmissionList);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n                .finally(() => {\r\n                    rerender_signal.value +=1\r\n                })\r\n            }\r\n            async function get_total_emission_year(){\r\n                await axios.get(\"Company/Preview/\"+selected_company.value+\"/\"+year.value+\"-01-01/\"+year.value+\"-12-28\",config).then(res => {\r\n                    console.log(res.data)\r\n                    console.log(\"연월\"+year.value)\r\n                    scope1.value = res.data.Scopes[0]\r\n                    scope2.value = res.data.Scopes[1]\r\n                    scope3.value = res.data.Scopes[2]\r\n                    total_emission  = res.data.Scopes.reduce((a, b) => a + b, 0)\r\n                    store.commit(\"set_scopes\",res.data.Scopes);\r\n                    store.commit(\"SetDetailEmission\",res.data.EmissionList);\r\n                })\r\n                .catch(error => {\r\n                console.log(error)\r\n                })\r\n                .finally(() => {\r\n                rerender_signal.value +=1\r\n                })\r\n            }\r\n\r\n            return{\r\n                group_list, selected_company, change_company\r\n            }\r\n        }\r\n    }\r\n  </script>"],"mappings":";;EACSA,KAAK,EAAC;AAAc;;EAEhBA,KAAK,EAAC;AAAU;;EAEZA,KAAK,EAAC;AAAY;;EAChBC,KAAqB,EAArB;IAAA;EAAA;AAAqB;gCAItBC,mBAAA,CAEI;EAFDF,KAAK,EAAC,aAAa;EAACC,KAAgB,EAAhB;IAAA;EAAA;kCAAiB,mBAAiB,G,aAAAC,mBAAA,CAAI,O,aACzDA,mBAAA,CAAsE;EAAhEF,KAAK,EAAC;AAAgB,GAAC,oCAAkC,E;;EAG5DC,KAAmB,EAAnB;IAAA;EAAA;AAAmB;;EACnBA,KAAqB,EAArB;IAAA;EAAA;AAAqB;;;;;;uBAd1CE,mBAAA,CAmBQ,OAnBRC,UAmBQ,GAlBJC,YAAA,CAAgCC,qBAAA;IAApBN,KAAK,EAAC;EAAY,IAC9BE,mBAAA,CAgBQ,OAhBRK,UAgBQ,GAfJF,YAAA,CAAkBG,0BAAA,GAClBN,mBAAA,CAaQ,OAbRO,UAaQ,GAZNP,mBAAA,CAWU,OAXVQ,UAWU,G,gBAVRR,mBAAA,CAES;IAFDF,KAAK,EAAC,cAAc;+DAAUW,MAAA,CAAAC,gBAAgB,GAAAC,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEF,MAAA,CAAAK,cAAc;yBAC7Eb,mBAAA,CAAkEc,SAAA,QAAAC,WAAA,CAA3CP,MAAA,CAAAQ,UAAU,EAAlBC,IAAI;yBAAnBjB,mBAAA,CAAkE;MAA9BkB,GAAG,EAAED;IAAI,GAAAE,gBAAA,CAAKF,IAAI;2FADlBT,MAAA,CAAAC,gBAAgB,E,GAGpDW,UAEI,EACJrB,mBAAA,CAGI,cAFFA,mBAAA,CAA8D,OAA9DsB,UAA8D,GAArCnB,YAAA,CAA+BoB,0BAAA;IAAdzB,KAAK,EAAC;EAAM,G,GACtDE,mBAAA,CAAiE,OAAjEwB,UAAiE,GAAtCrB,YAAA,CAAgCsB,2BAAA;IAAd3B,KAAK,EAAC;EAAM,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}