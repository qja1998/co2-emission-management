{"ast":null,"code":"import navigation from \"@/components/Navigation.vue\";\nimport predict_header from \"@/components/predict/Header.vue\";\nimport predict_dash1 from \"@/components/predict/dash1/dash1.vue\";\nimport predict_dash2 from \"@/components/predict/dash2/dash2.vue\";\nimport predict_dash3 from \"@/components/predict/dash3/dash3.vue\";\nimport predict_dash4 from \"@/components/predict/dash4/dash4.vue\";\nimport predict_dash5 from \"@/components/predict/dash5/dash5.vue\";\nimport { useStore } from 'vuex';\nimport { ref, computed } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: \"predict\",\n  components: {\n    navigation,\n    predict_header,\n    predict_dash1,\n    predict_dash2,\n    predict_dash3,\n    predict_dash4,\n    predict_dash5\n  },\n  setup() {\n    var store = useStore();\n    var group_list = computed(() => store.state.group_list).value;\n    var selected_company = ref(group_list[0]);\n    store.commit(\"insight_select_company\", selected_company.value);\n    var now = new Date(); // 현재 날짜 및 시간\n    var year = ref(now.getFullYear()); // 년도\n    var month = ref(now.getMonth()); //월\n    console.log('현재달', now, month.value);\n    var lastmonth = new Date(now);\n    lastmonth.setMonth(lastmonth.getMonth() - 5);\n    var rerender_signal = ref(0);\n    const config = {\n      headers: {\n        Authorization: \"Bearer\" + \" \" + store.state.accessToken\n      }\n    };\n    async function get_predict_category_next_month() {\n      var url = \"/CarbonPrediction/CategoryPrediction/\" + selected_company.value;\n      axios.get(url, config).then(res => {\n        store.commit('getNextMonthcategory', res.data);\n        console.log('예측', res.data);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n\n    //현재 총 데이터\n    async function get_total_data_now() {\n      var url = \"/CarbonEmission/PartEmission/\" + selected_company.value + \"/\" + year.value + \"-\" + \"01\" + \"-01/\" + year.value + \"-\" + month.value + \"-28/0\";\n      console.log('url', url);\n      axios.get(url, config).then(res => {\n        console.log('총 데이터', res.data);\n        store.commit('getTotalNowData', sumfun(res.data));\n      }).catch(error => {\n        store.commit('getTotalNowData', sumfun(0));\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n    function sumfun(list) {\n      var sum = ref(0);\n      for (var i = 0; i < list.length; i++) {\n        sum.value = list[i] + sum.value;\n      }\n      return sum.value;\n    }\n    get_predict_category_next_month();\n    get_total_data_now();\n    function change_company() {\n      store.commit(\"insight_select_company\", selected_company.value);\n      get_predict_category_next_month();\n    }\n    return {\n      group_list,\n      selected_company,\n      change_company\n    };\n  },\n  mouted() {\n    this.rerender_signal.value += 1;\n  }\n};","map":{"version":3,"names":["navigation","predict_header","predict_dash1","predict_dash2","predict_dash3","predict_dash4","predict_dash5","useStore","ref","computed","axios","name","components","setup","store","group_list","state","value","selected_company","commit","now","Date","year","getFullYear","month","getMonth","console","log","lastmonth","setMonth","rerender_signal","config","headers","Authorization","accessToken","get_predict_category_next_month","url","get","then","res","data","catch","error","finally","get_total_data_now","sumfun","list","sum","i","length","change_company","mouted"],"sources":["C:\\Users\\user\\Desktop\\CarbonVueproject\\co2-emission-management\\vueProject\\src\\views\\Predict\\predictCarbonPreview.vue"],"sourcesContent":["<template>\r\n  <div class=\"measure-main\">\r\n      <navigation class=\"navigation\"/>\r\n      <div class=\"contents\">\r\n          <predict_header/>\r\n          <div class=\"background\">\r\n            <div style=\"height:140vh;\">\r\n                <select class=\"select_group\" v-model=\"selected_company\" @change=\"change_company(selected_company)\">\r\n                  <option v-for=\"item in group_list\" :key=\"item\">{{ item }}</option>\r\n                </select>\r\n                <span class=\"header-page\" style=\"margin:0\">탄소 배출량 예측 전체보기<br>\r\n                    <span class=\"subHeader-page\">Predicted Carbon emission Overview</span>\r\n                </span>\r\n                <div id=\"wrap1\">\r\n                    <div style=\"height:15vh\"><predict_dash1 class=\"dash\"/></div>\r\n                    <predict_dash2 :key=\"rerender_signal\" class=\"dash\" id=\"dash2\"/>\r\n                </div>\r\n                \r\n                <div id=\"wrap2\" style=\"margin-top:2vh\">\r\n                    <predict_dash3 :key=\"rerender_signal\" class=\"dash\"/>\r\n                    <predict_dash4  :key=\"rerender_signal\" class=\"dash\" id=\"dash4\"/>\r\n                    \r\n                </div>\r\n                <predict_dash5 :key=\"rerender_signal\" class=\"dash\"  id=\"dash5\"/></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<style>\r\n.background{\r\n    background:#F7F9FB;\r\n    min-height:86vh;\r\n    height: inherit;\r\n    padding:3vh 2.5vw;\r\n}\r\n.header-page{\r\n    color:#5A5A5A;\r\n    font-size:1.5rem;\r\n    font-weight :600;\r\n}\r\n.subHeader-page{\r\n    color:#5A5A5A;\r\n    font-size:1rem;\r\n    font-weight:200;\r\n}\r\n#wrap1 > * {\r\n    float: left;\r\n}\r\n\r\n#wrap1::after {\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n}\r\n#wrap2 > * {\r\n    margin-top:3vh;\r\n    float: left;\r\n}\r\n\r\n#dash2{\r\n    margin-left:2vw;\r\n}\r\n\r\n#dash4{\r\n    margin-left:2vw\r\n}\r\n#dash5{\r\n    float:right; \r\n    margin-right:2vw;\r\n    margin-top:3vh\r\n}\r\n</style>\r\n\r\n<script>\r\nimport navigation from \"@/components/Navigation.vue\"\r\nimport predict_header from \"@/components/predict/Header.vue\"\r\nimport predict_dash1 from \"@/components/predict/dash1/dash1.vue\"\r\nimport predict_dash2 from \"@/components/predict/dash2/dash2.vue\"\r\nimport predict_dash3 from \"@/components/predict/dash3/dash3.vue\"\r\nimport predict_dash4 from \"@/components/predict/dash4/dash4.vue\"\r\nimport predict_dash5 from \"@/components/predict/dash5/dash5.vue\"\r\nimport {useStore} from 'vuex'\r\nimport {ref, computed} from 'vue'\r\nimport axios from 'axios'\r\n\r\n  export default {\r\n      name :\"predict\",\r\n      components:{\r\n          navigation,\r\n          predict_header,\r\n          predict_dash1,\r\n          predict_dash2,\r\n          predict_dash3,\r\n          predict_dash4,\r\n          predict_dash5,\r\n      },\r\n      setup() {\r\n        var store = useStore()\r\n        var group_list = computed(() => store.state.group_list).value\r\n        var selected_company = ref(group_list[0])\r\n        store.commit(\"insight_select_company\",selected_company.value)\r\n        \r\n        var now = new Date();\t// 현재 날짜 및 시간\r\n        var year = ref(now.getFullYear())\t// 년도\r\n        var month = ref(now.getMonth())//월\r\n        console.log('현재달',now,month.value)\r\n        var lastmonth= new Date(now)\r\n        lastmonth.setMonth(lastmonth.getMonth() - 5)\r\n\r\n        var rerender_signal = ref(0)\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization:\"Bearer\"+\" \"+store.state.accessToken,\r\n            }\r\n        }\r\n\r\n\r\n        async function get_predict_category_next_month(){\r\n            var url = \"/CarbonPrediction/CategoryPrediction/\"+selected_company.value\r\n            axios.get(url,config).then(res=>{\r\n                store.commit('getNextMonthcategory',res.data)\r\n                console.log('예측', res.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n            .finally(()=>{\r\n                rerender_signal.value +=1\r\n            })\r\n        }\r\n\r\n                  //현재 총 데이터\r\n        async function get_total_data_now(){\r\n            var url = \"/CarbonEmission/PartEmission/\"+selected_company.value+\"/\"+year.value+\"-\"+\"01\"+\"-01/\"+year.value+\"-\"+month.value+\"-28/0\"\r\n            console.log('url', url)\r\n            axios.get(url,config).then(res=>{\r\n                console.log('총 데이터',res.data)\r\n                store.commit('getTotalNowData',sumfun(res.data))\r\n                })\r\n                .catch(error => {\r\n                store.commit('getTotalNowData',sumfun(0))\r\n                console.log(error)\r\n                })\r\n                .finally(()=>{\r\n                rerender_signal.value +=1\r\n            })\r\n        }\r\n\r\n        function sumfun(list){\r\n            var sum =ref(0)\r\n            for(var i=0; i<list.length; i++){\r\n                sum.value = list[i] + sum.value\r\n            }\r\n            return sum.value\r\n        }\r\n\r\n        get_predict_category_next_month()\r\n        get_total_data_now()\r\n\r\n        function change_company(){\r\n            store.commit(\"insight_select_company\",selected_company.value)\r\n            get_predict_category_next_month()\r\n        }\r\n        return{\r\n            group_list,\r\n            selected_company,\r\n            change_company\r\n        }\r\n      },\r\n      mouted(){\r\n        this.rerender_signal.value +=1\r\n      }\r\n  }\r\n</script>"],"mappings":"AA4EA,OAAOA,UAAS,MAAO,6BAA4B;AACnD,OAAOC,cAAa,MAAO,iCAAgC;AAC3D,OAAOC,aAAY,MAAO,sCAAqC;AAC/D,OAAOC,aAAY,MAAO,sCAAqC;AAC/D,OAAOC,aAAY,MAAO,sCAAqC;AAC/D,OAAOC,aAAY,MAAO,sCAAqC;AAC/D,OAAOC,aAAY,MAAO,sCAAqC;AAC/D,SAAQC,QAAQ,QAAO,MAAK;AAC5B,SAAQC,GAAG,EAAEC,QAAQ,QAAO,KAAI;AAChC,OAAOC,KAAI,MAAO,OAAM;AAEtB,eAAe;EACXC,IAAG,EAAG,SAAS;EACfC,UAAU,EAAC;IACPZ,UAAU;IACVC,cAAc;IACdC,aAAa;IACbC,aAAa;IACbC,aAAa;IACbC,aAAa;IACbC;EACJ,CAAC;EACDO,KAAKA,CAAA,EAAG;IACN,IAAIC,KAAI,GAAIP,QAAQ,EAAC;IACrB,IAAIQ,UAAS,GAAIN,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACD,UAAU,CAAC,CAACE,KAAI;IAC5D,IAAIC,gBAAe,GAAIV,GAAG,CAACO,UAAU,CAAC,CAAC,CAAC;IACxCD,KAAK,CAACK,MAAM,CAAC,wBAAwB,EAACD,gBAAgB,CAACD,KAAK;IAE5D,IAAIG,GAAE,GAAI,IAAIC,IAAI,EAAE,EAAE;IACtB,IAAIC,IAAG,GAAId,GAAG,CAACY,GAAG,CAACG,WAAW,EAAE,GAAE;IAClC,IAAIC,KAAI,GAAIhB,GAAG,CAACY,GAAG,CAACK,QAAQ,EAAE,CAAC;IAC/BC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACP,GAAG,EAACI,KAAK,CAACP,KAAK;IACjC,IAAIW,SAAS,GAAE,IAAIP,IAAI,CAACD,GAAG;IAC3BQ,SAAS,CAACC,QAAQ,CAACD,SAAS,CAACH,QAAQ,EAAC,GAAI,CAAC;IAE3C,IAAIK,eAAc,GAAItB,GAAG,CAAC,CAAC;IAE3B,MAAMuB,MAAK,GAAI;MACXC,OAAO,EAAC;QACJC,aAAa,EAAC,QAAQ,GAAC,GAAG,GAACnB,KAAK,CAACE,KAAK,CAACkB;MAC3C;IACJ;IAGA,eAAeC,+BAA+BA,CAAA,EAAE;MAC5C,IAAIC,GAAE,GAAI,uCAAuC,GAAClB,gBAAgB,CAACD,KAAI;MACvEP,KAAK,CAAC2B,GAAG,CAACD,GAAG,EAACL,MAAM,CAAC,CAACO,IAAI,CAACC,GAAG,IAAE;QAC5BzB,KAAK,CAACK,MAAM,CAAC,sBAAsB,EAACoB,GAAG,CAACC,IAAI;QAC5Cd,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEY,GAAG,CAACC,IAAI;MAC9B,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZhB,OAAO,CAACC,GAAG,CAACe,KAAK;MACrB,CAAC,EACAC,OAAO,CAAC,MAAI;QACTb,eAAe,CAACb,KAAI,IAAI;MAC5B,CAAC;IACL;;IAEU;IACV,eAAe2B,kBAAkBA,CAAA,EAAE;MAC/B,IAAIR,GAAE,GAAI,+BAA+B,GAAClB,gBAAgB,CAACD,KAAK,GAAC,GAAG,GAACK,IAAI,CAACL,KAAK,GAAC,GAAG,GAAC,IAAI,GAAC,MAAM,GAACK,IAAI,CAACL,KAAK,GAAC,GAAG,GAACO,KAAK,CAACP,KAAK,GAAC,OAAM;MACjIS,OAAO,CAACC,GAAG,CAAC,KAAK,EAAES,GAAG;MACtB1B,KAAK,CAAC2B,GAAG,CAACD,GAAG,EAACL,MAAM,CAAC,CAACO,IAAI,CAACC,GAAG,IAAE;QAC5Bb,OAAO,CAACC,GAAG,CAAC,OAAO,EAACY,GAAG,CAACC,IAAI;QAC5B1B,KAAK,CAACK,MAAM,CAAC,iBAAiB,EAAC0B,MAAM,CAACN,GAAG,CAACC,IAAI,CAAC;MAC/C,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QAChB5B,KAAK,CAACK,MAAM,CAAC,iBAAiB,EAAC0B,MAAM,CAAC,CAAC,CAAC;QACxCnB,OAAO,CAACC,GAAG,CAACe,KAAK;MACjB,CAAC,EACAC,OAAO,CAAC,MAAI;QACbb,eAAe,CAACb,KAAI,IAAI;MAC5B,CAAC;IACL;IAEA,SAAS4B,MAAMA,CAACC,IAAI,EAAC;MACjB,IAAIC,GAAE,GAAGvC,GAAG,CAAC,CAAC;MACd,KAAI,IAAIwC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAC;QAC5BD,GAAG,CAAC9B,KAAI,GAAI6B,IAAI,CAACE,CAAC,IAAID,GAAG,CAAC9B,KAAI;MAClC;MACA,OAAO8B,GAAG,CAAC9B,KAAI;IACnB;IAEAkB,+BAA+B,EAAC;IAChCS,kBAAkB,EAAC;IAEnB,SAASM,cAAcA,CAAA,EAAE;MACrBpC,KAAK,CAACK,MAAM,CAAC,wBAAwB,EAACD,gBAAgB,CAACD,KAAK;MAC5DkB,+BAA+B,EAAC;IACpC;IACA,OAAM;MACFpB,UAAU;MACVG,gBAAgB;MAChBgC;IACJ;EACF,CAAC;EACDC,MAAMA,CAAA,EAAE;IACN,IAAI,CAACrB,eAAe,CAACb,KAAI,IAAI;EAC/B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}