{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: \"benefit\",\n  components: {},\n  setup() {\n    var store = useStore();\n    //날짜 그룹명\n    var user_group = computed(() => store.state.user_group);\n    var selected_company = computed(() => store.state.insight_selected_company);\n    var now = new Date(); // 현재 날짜 및 시간\n    var year = now.getFullYear(); // 년도\n    var month = now.getMonth();\n\n    //서버\n    var server_targetTotal_data = 570;\n    var server_EmissionInfo = {\n      groupName: '경상국립대학교',\n      BaseYear: 2019,\n      BaseEmissions: 2650\n    };\n    var getTotalLastData = computed(() => store.state.getTotalLastData);\n    var server_targetTotal_data = computed(() => store.state.getTargetData);\n    var BaseEmissions = computed(() => store.state.baseData);\n    var carbonMoney = ref(250);\n    var increaseEmissionOfBase = BaseEmissions.value - (getTotalLastData.value - server_targetTotal_data.value);\n    var profitMoney = ref(carbonMoney.value * increaseEmissionOfBase);\n    function getAmount() {\n      console.log('새로 고침');\n    }\n    return {\n      carbonMoney,\n      increaseEmissionOfBase,\n      profitMoney,\n      getAmount\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","useStore","name","components","setup","store","user_group","state","selected_company","insight_selected_company","now","Date","year","getFullYear","month","getMonth","server_targetTotal_data","server_EmissionInfo","groupName","BaseYear","BaseEmissions","getTotalLastData","getTargetData","baseData","carbonMoney","increaseEmissionOfBase","value","profitMoney","getAmount","console","log"],"sources":["C:\\Users\\user\\Desktop\\CarbonVueproject\\co2-emission-management\\vueProject\\src\\components\\scenario\\dash3\\benefit.vue"],"sourcesContent":["<template>\r\n    <div> \r\n        <router-link to=\"/nature/progress\" style=\"text-decoration: none;\"><div class=\"scenario-title\">탄소 배출권 기대효과</div></router-link>\r\n        <div class=\"scenario-frame\" >\r\n            <div>\r\n                <img style=\"padding-top: 3vh; height: 16vh; margin: auto; display: block;\" src=\"@/assets/money.png\">\r\n                <div style=\"font-size: 3vh; font-weight: bold; text-align: center; color: #163945; padding-bottom: 3vh;\">{{profitMoney/10000}}<span>만원 이득</span></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        \r\n\r\n</template>\r\n\r\n<style>\r\n\r\n</style>\r\n\r\n\r\n<script>\r\nimport {ref, computed} from 'vue'\r\nimport { useStore } from 'vuex'\r\n    export default {\r\n        name :\"benefit\",\r\n        components:{\r\n            \r\n        },\r\n        setup(){\r\n            var store =useStore()\r\n            //날짜 그룹명\r\n            var user_group = computed(()=> store.state.user_group)\r\n            var selected_company = computed(()=> store.state.insight_selected_company)\r\n\r\n            var now = new Date();\t// 현재 날짜 및 시간\r\n            var year = now.getFullYear()\t// 년도\r\n            var month = now.getMonth()\r\n\r\n            //서버\r\n            var server_targetTotal_data = 570\r\n            var server_EmissionInfo = {\r\n                groupName:'경상국립대학교',\r\n                BaseYear:2019,\r\n                BaseEmissions:2650\r\n            }\r\n\r\n            var getTotalLastData =  computed(()=> store.state.getTotalLastData)\r\n            var server_targetTotal_data =  computed(()=> store.state.getTargetData)\r\n            var BaseEmissions = computed(()=> store.state.baseData)\r\n\r\n            var carbonMoney = ref(250)\r\n            var increaseEmissionOfBase = BaseEmissions.value - (getTotalLastData.value-server_targetTotal_data.value)\r\n            var profitMoney = ref(carbonMoney.value*increaseEmissionOfBase)\r\n\r\n            function getAmount(){\r\n                console.log('새로 고침')\r\n            }\r\n            return{\r\n                carbonMoney,\r\n                increaseEmissionOfBase,\r\n                profitMoney,\r\n                getAmount\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":"AAoBA,SAAQA,GAAG,EAAEC,QAAQ,QAAO,KAAI;AAChC,SAASC,QAAO,QAAS,MAAK;AAC1B,eAAe;EACXC,IAAG,EAAG,SAAS;EACfC,UAAU,EAAC,CAEX,CAAC;EACDC,KAAKA,CAAA,EAAE;IACH,IAAIC,KAAI,GAAGJ,QAAQ,EAAC;IACpB;IACA,IAAIK,UAAS,GAAIN,QAAQ,CAAC,MAAKK,KAAK,CAACE,KAAK,CAACD,UAAU;IACrD,IAAIE,gBAAe,GAAIR,QAAQ,CAAC,MAAKK,KAAK,CAACE,KAAK,CAACE,wBAAwB;IAEzE,IAAIC,GAAE,GAAI,IAAIC,IAAI,EAAE,EAAE;IACtB,IAAIC,IAAG,GAAIF,GAAG,CAACG,WAAW,EAAC,EAAE;IAC7B,IAAIC,KAAI,GAAIJ,GAAG,CAACK,QAAQ,EAAC;;IAEzB;IACA,IAAIC,uBAAsB,GAAI,GAAE;IAChC,IAAIC,mBAAkB,GAAI;MACtBC,SAAS,EAAC,SAAS;MACnBC,QAAQ,EAAC,IAAI;MACbC,aAAa,EAAC;IAClB;IAEA,IAAIC,gBAAe,GAAKrB,QAAQ,CAAC,MAAKK,KAAK,CAACE,KAAK,CAACc,gBAAgB;IAClE,IAAIL,uBAAsB,GAAKhB,QAAQ,CAAC,MAAKK,KAAK,CAACE,KAAK,CAACe,aAAa;IACtE,IAAIF,aAAY,GAAIpB,QAAQ,CAAC,MAAKK,KAAK,CAACE,KAAK,CAACgB,QAAQ;IAEtD,IAAIC,WAAU,GAAIzB,GAAG,CAAC,GAAG;IACzB,IAAI0B,sBAAqB,GAAIL,aAAa,CAACM,KAAI,IAAKL,gBAAgB,CAACK,KAAK,GAACV,uBAAuB,CAACU,KAAK;IACxG,IAAIC,WAAU,GAAI5B,GAAG,CAACyB,WAAW,CAACE,KAAK,GAACD,sBAAsB;IAE9D,SAASG,SAASA,CAAA,EAAE;MAChBC,OAAO,CAACC,GAAG,CAAC,OAAO;IACvB;IACA,OAAM;MACFN,WAAW;MACXC,sBAAsB;MACtBE,WAAW;MACXC;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}