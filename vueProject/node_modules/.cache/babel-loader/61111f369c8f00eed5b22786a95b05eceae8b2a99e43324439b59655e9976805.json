{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"frame\",\n  id: \"frame-categoryChart\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-chart\"\n}, \"2023년 8월\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_predict_chart = _resolveComponent(\"predict_chart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_predict_chart)])]);\n}","map":{"version":3,"names":["class","id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_predict_chart"],"sources":["/home/hyemi/carbon/carbon-dashboard/src/components/predict/categoryStickGraph/categoryStickGraph.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"frame\" id=\"frame-categoryChart\">\n            <div class=\"title-chart\">2023년 8월</div>\n            <predict_chart />\n        </div>\n        \n    </div>\n</template>\n\n<style>\n#frame-categoryChart {\n    width: 95%;\n    height: 100%;\n}\n\n\n</style>\n\n<script>\nimport { Bar } from 'vue-chartjs';\n\nexport default {\n    name: 'Barchart',\n    components: {BarChart},\n    data() {\n        return {\n            chart: {\n                data: {\n                    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','Setember','October','November','December'],\n                    datasets: [{\n                    label: '고정연소',\n                    data: [580, 590, 640, 575, 573, 680, 680, 820, 760, 758, 770, 759, 762],\n                    borderColor: '#9FD72A',\n                    borderWidth: 1\n                    }],\n                },\n                options: {\n                    plugins: {\n                        legend: {\n                            display: false\n                        },\n                        datalabels: true\n                    },\n                    tooltip: {\n                        boxWidth: 15\n                    }\n                },\n                scales: {\n                    x: {\n                        grid: {\n                            display: false\n                        },\n                        ticks: {\n                            padding: 3\n                        }\n                    },\n                    y: {\n                        grid: {\n                            drawBorder: false,\n                            color: \"black\",\n                            lineWidth: 1\n                        },\n                        min: 0,\n                        max: 5000,\n                        ticks: {\n                            stepSize: 1000,\n                            padding: 10,\n                            callback: (val, indexe) => {\n                                return val !== 0\n                                ? val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                                : \"\";\n                            }\n                        }\n                    }\n                },\n                reponsive: true,\n                maintainAspectRatio: false,\n                animation: {\n                    duration: 5000\n                }\n            }\n        }\n    }\n}\n\n</script>"],"mappings":";;EAEaA,KAAK,EAAC,OAAO;EAACC,EAAE,EAAC;;gCAClBC,mBAAA,CAAuC;EAAlCF,KAAK,EAAC;AAAa,GAAC,UAAQ;;;;uBAFzCG,mBAAA,CAMM,cALFD,mBAAA,CAGM,OAHNE,UAGM,GAFFC,UAAuC,EACvCC,YAAA,CAAiBC,wBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}