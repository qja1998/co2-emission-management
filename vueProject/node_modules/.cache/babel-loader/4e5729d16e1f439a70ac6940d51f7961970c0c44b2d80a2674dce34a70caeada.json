{"ast":null,"code":"import navigation from \"@/components/Navigation.vue\";\nimport scenario_header from \"@/components/scenario/Header.vue\";\nimport dash1_footprint from \"@/components/scenario/dash1/totalCarbonFootprint.vue\";\nimport dash1_scopeChart from \"@/components/scenario/dash1/scopeRatio.vue\";\nimport dash1_predictChart from \"@/components/scenario/dash1/totalCarbonPredict.vue\";\nimport dash2_reduceList from \"@/components/scenario/dash2/reduceList.vue\";\nimport dash3_progress from \"@/components/scenario/dash3/progressChart.vue\";\nimport dash3_benefit from \"@/components/scenario/dash3/benefit.vue\";\nimport axios from \"axios\";\nimport { useStore } from \"vuex\";\nimport { computed, ref } from \"vue\";\nexport default {\n  name: \"scenario\",\n  components: {\n    navigation,\n    scenario_header,\n    dash1_footprint,\n    dash1_scopeChart,\n    dash1_predictChart,\n    dash2_reduceList,\n    dash3_progress,\n    dash3_benefit\n  },\n  setup() {\n    var store = useStore();\n    var group_list = computed(() => store.state.group_list).value;\n    var selected_company = ref(group_list[0]);\n    var rerender_signal = ref(0);\n    var now = new Date(); // 현재 날짜 및 시간\n    var year = ref(now.getFullYear());\n    var lastyear = ref(now.getFullYear() - 1);\n    var month = ref(now.getMonth());\n    var scope1 = ref(0);\n    var scope2 = ref(0);\n    var scope3 = ref(0);\n    store.commit(\"insight_select_company\", selected_company.value);\n    const config = {\n      headers: {\n        Authorization: \"Bearer\" + \" \" + store.state.accessToken\n      }\n    };\n\n    //기준량 데이터\n    async function get_Base_Info() {\n      var url = \"/CarbonNature/Evaluation/\" + selected_company.value;\n      axios.get(url, config).then(res => {\n        store.commit('getBaseYear', res.data.BaseYear);\n        store.commit('getBaseData', res.data.BaseEmissions);\n      }).catch(error => {\n        console.log(error);\n        store.commit('getBaseYear', 0);\n        store.commit('getBaseData', 0);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n\n    //감축 목표 총 데이터\n    async function get_total_target_data() {\n      var url = \"/CarbonNature/CarbonYear/\" + selected_company.value + \"/\" + year.value + \"/0\";\n      axios.get(url, config).then(res => {\n        store.commit('getTargetData', res.data);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n    async function get_target_list() {\n      var url = \"/CarbonNature/TargetList/\" + selected_company.value + \"/\" + year.value;\n      axios.get(url, config).then(res => {\n        store.commit(\"getTargetList\", res.data);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {});\n    }\n    async function get_total_emission_month() {\n      await axios.get(\"Company/Preview/\" + selected_company.value + \"/\" + year.value + \"-\" + month.value + \"-01/\" + year.value + \"-\" + month.value + \"-28\", config).then(res => {\n        console.log(res.data);\n        console.log(\"연월\" + year.value + month.value);\n        scope1.value = res.data.Scopes[0];\n        scope2.value = res.data.Scopes[1];\n        scope3.value = res.data.Scopes[2];\n        store.commit(\"set_scopes\", res.data.Scopes);\n        store.commit(\"SetDetailEmission\", res.data.EmissionList);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n\n    //현재 총 데이터\n    async function get_total_data_now() {\n      var url = \"/CarbonEmission/PartEmission/\" + selected_company.value + \"/\" + year.value + \"-01-01/\" + year.value + \"-\" + month.value + \"-28/0\";\n      axios.get(url, config).then(res => {\n        store.commit('getTotalNowData', sumfun(res.data));\n      }).catch(error => {\n        store.commit('getTotalNowData', sumfun(0));\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n    async function get_total_data() {\n      var url = \"/CarbonEmission/PartEmission/\" + selected_company.value + \"/\" + lastyear + \"-01-01/\" + lastyear + \"-12-28/0\";\n      axios.get(url, config).then(res => {\n        store.commit('getTotalLastData', sumfun(res.data));\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n    function sumfun(list) {\n      var sum = ref(0);\n      for (var i = 0; i < list.length; i++) {\n        sum.value = list[i] + sum.value;\n      }\n      return sum.value;\n    }\n    get_total_emission_month();\n    get_total_data_now();\n    get_target_list();\n    get_total_target_data();\n    get_total_data();\n    function change_company() {\n      store.commit(\"insight_select_company\", selected_company.value);\n      get_total_emission_month();\n      get_total_data_now();\n      get_target_list();\n      get_total_target_data();\n      get_total_data();\n    }\n    return {\n      group_list,\n      selected_company,\n      change_company,\n      rerender_signal\n    };\n  }\n};","map":{"version":3,"names":["navigation","scenario_header","dash1_footprint","dash1_scopeChart","dash1_predictChart","dash2_reduceList","dash3_progress","dash3_benefit","axios","useStore","computed","ref","name","components","setup","store","group_list","state","value","selected_company","rerender_signal","now","Date","year","getFullYear","lastyear","month","getMonth","scope1","scope2","scope3","commit","config","headers","Authorization","accessToken","get_Base_Info","url","get","then","res","data","BaseYear","BaseEmissions","catch","error","console","log","finally","get_total_target_data","get_target_list","get_total_emission_month","Scopes","EmissionList","get_total_data_now","sumfun","get_total_data","list","sum","i","length","change_company"],"sources":["C:\\Users\\user\\Desktop\\CarbonVueproject\\co2-emission-management\\vueProject\\src\\views\\Scenario\\carbonScenarioPreview.vue"],"sourcesContent":["<template>\r\n    <div class=\"measure-main\">\r\n        <navigation class=\"navigation\"/>\r\n        <div class=\"contents\">\r\n            <scenario_header/>\r\n            <div class=\"background\">\r\n              <div style=\"height:140vh;\">\r\n                <select class=\"select_group\" v-model=\"selected_company\" @change=\"change_company()\">\r\n                  <option v-for=\"item in group_list\" :key=\"item\">{{ item }}</option>\r\n                </select>\r\n                <p class=\"header-page\" style=\"margin:0\">탄소 중립 시나리오 한눈에 보기<br>\r\n                  <span class=\"subHeader-page\">Carbon Neutral Scenarios Overview</span>\r\n                </p>\r\n                <div id=\"wrap1\">\r\n                    <div :key=\"rerender_signal\">\r\n                        <div><dash1_footprint  style=\"padding-top: 3vh;\" /></div>\r\n                        <div style=\"padding-top: 2vh;\"><dash1_scopeChart/></div>\r\n                        <div style=\"padding-top: 2vh;\"><dash1_predictChart/></div>\r\n                    </div>\r\n                    <dash2_reduceList :key=\"rerender_signal\" style=\"padding: 3vh 0 0 1.5vw;\"/>\r\n                    <div>\r\n                        <dash3_progress :key=\"rerender_signal\" style=\"padding: 3vh 0 0 1.5vw;\"/>\r\n                        <dash3_benefit :key=\"rerender_signal\" style=\"padding: 3vh 0 0 1.5vw;\"/>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </template>\r\n  \r\n  \r\n  <style>\r\n\r\n  </style>\r\n  \r\n  <script>\r\n  import navigation from \"@/components/Navigation.vue\"\r\n  import scenario_header from \"@/components/scenario/Header.vue\"\r\n  import dash1_footprint from \"@/components/scenario/dash1/totalCarbonFootprint.vue\"\r\n  import dash1_scopeChart from \"@/components/scenario/dash1/scopeRatio.vue\"\r\n  import dash1_predictChart from \"@/components/scenario/dash1/totalCarbonPredict.vue\"\r\n  import dash2_reduceList from \"@/components/scenario/dash2/reduceList.vue\"\r\n  import dash3_progress from \"@/components/scenario/dash3/progressChart.vue\"\r\n  import dash3_benefit from \"@/components/scenario/dash3/benefit.vue\"\r\n  import axios from \"axios\"\r\n  import { useStore } from \"vuex\"\r\n  import {computed, ref} from \"vue\"\r\n  \r\n    export default {\r\n        name :\"scenario\",\r\n        components:{\r\n            navigation,\r\n            scenario_header,\r\n            dash1_footprint,\r\n            dash1_scopeChart,\r\n            dash1_predictChart,\r\n            dash2_reduceList,\r\n            dash3_progress,\r\n            dash3_benefit\r\n        },\r\n        setup() {\r\n            var store = useStore()\r\n            var group_list = computed(() => store.state.group_list).value\r\n            var selected_company = ref(group_list[0])\r\n            var rerender_signal = ref(0)\r\n\r\n            var now = new Date();\t// 현재 날짜 및 시간\r\n            var year = ref(now.getFullYear())\r\n            var lastyear = ref(now.getFullYear()-1)\r\n            var month = ref(now.getMonth())\r\n            var scope1 = ref(0)\r\n            var scope2 = ref(0)\r\n            var scope3 = ref(0)\r\n            store.commit(\"insight_select_company\",selected_company.value)\r\n\r\n            const config = {\r\n                headers:{\r\n                    Authorization:\"Bearer\"+\" \"+store.state.accessToken,\r\n                }\r\n            }\r\n\r\n            //기준량 데이터\r\n            async function get_Base_Info(){\r\n                var url = \"/CarbonNature/Evaluation/\"+selected_company.value\r\n                axios.get(url,config).then(res=>{\r\n                    store.commit('getBaseYear',res.data.BaseYear)\r\n                  store.commit('getBaseData',res.data.BaseEmissions)\r\n                })\r\n                .catch(error => {\r\n                console.log(error)\r\n                store.commit('getBaseYear',0)\r\n                store.commit('getBaseData',0)\r\n                })\r\n                .finally(()=>{\r\n                rerender_signal.value +=1\r\n                })\r\n            }\r\n\r\n            //감축 목표 총 데이터\r\n            async function get_total_target_data(){\r\n                var url = \"/CarbonNature/CarbonYear/\"+selected_company.value+\"/\"+year.value+\"/0\"\r\n                axios.get(url,config).then(res=>{\r\n                    store.commit('getTargetData',res.data)\r\n                    })\r\n                    .catch(error => {\r\n                    console.log(error)\r\n                    })\r\n                    .finally(()=>{\r\n                    rerender_signal.value +=1\r\n                })\r\n            }\r\n\r\n            async function get_target_list(){\r\n                var url = \"/CarbonNature/TargetList/\"+selected_company.value+\"/\"+year.value\r\n                axios.get(url,config).then(res=>{\r\n                    store.commit(\"getTargetList\", res.data)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n                .finally(()=>{\r\n                })\r\n                \r\n            } \r\n\r\n            async function get_total_emission_month(){\r\n              await axios.get(\"Company/Preview/\"+selected_company.value+\"/\"+year.value+\"-\"+month.value+\"-01/\"+year.value+\"-\"+month.value+\"-28\",config).then(res => {\r\n                console.log(res.data)\r\n                console.log(\"연월\"+year.value+month.value)\r\n                scope1.value = res.data.Scopes[0]\r\n                scope2.value = res.data.Scopes[1]\r\n                scope3.value = res.data.Scopes[2]\r\n                store.commit(\"set_scopes\",res.data.Scopes);\r\n                store.commit(\"SetDetailEmission\",res.data.EmissionList);\r\n              })\r\n              .catch(error => {\r\n                console.log(error)\r\n              })\r\n              .finally(() => {\r\n                rerender_signal.value +=1\r\n              })\r\n            }\r\n\r\n            //현재 총 데이터\r\n            async function get_total_data_now(){\r\n              var url = \"/CarbonEmission/PartEmission/\"+selected_company.value+\"/\"+year.value+\"-01-01/\"+year.value+\"-\"+month.value+\"-28/0\"\r\n              axios.get(url,config).then(res=>{\r\n                    store.commit('getTotalNowData',sumfun(res.data))\r\n                  })\r\n                  .catch(error => {\r\n                    store.commit('getTotalNowData',sumfun(0))\r\n                    console.log(error)\r\n                  })\r\n                  .finally(()=>{\r\n                  rerender_signal.value +=1\r\n              })\r\n            }\r\n\r\n            async function get_total_data(){\r\n              var url = \"/CarbonEmission/PartEmission/\"+selected_company.value+\"/\"+lastyear+\"-01-01/\"+lastyear+\"-12-28/0\"\r\n              axios.get(url,config).then(res=>{\r\n                  store.commit('getTotalLastData',sumfun(res.data))\r\n                  })\r\n                  .catch(error => {\r\n                  console.log(error)\r\n                  })\r\n                  .finally(()=>{\r\n                  rerender_signal.value +=1\r\n              })\r\n          }\r\n\r\n            function sumfun(list){\r\n                var sum =ref(0)\r\n                for(var i=0; i<list.length; i++){\r\n                    sum.value = list[i] + sum.value\r\n                }\r\n                return sum.value\r\n            }\r\n            \r\n            get_total_emission_month()\r\n            get_total_data_now()\r\n            get_target_list()\r\n            get_total_target_data()\r\n            get_total_data()\r\n\r\n            function change_company(){\r\n                store.commit(\"insight_select_company\", selected_company.value)\r\n                get_total_emission_month()\r\n                get_total_data_now()\r\n                get_target_list()\r\n                get_total_target_data()\r\n                get_total_data()\r\n    \r\n            }\r\n            return{\r\n                group_list,\r\n                selected_company,\r\n                change_company,\r\n                rerender_signal\r\n            }\r\n        }\r\n    }\r\n  </script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}