{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from \"axios\";\nexport default {\n  name: \"progress_dash2\",\n  components: {},\n  setup() {\n    var store = useStore();\n    //날짜 그룹명\n    var user_group = computed(() => store.state.user_group);\n    var selected_company = computed(() => store.state.insight_selected_company);\n    var now = new Date(); // 현재 날짜 및 시간\n    var year = now.getFullYear(); // 년도\n    var month = now.getMonth();\n\n    //서버\n    var server_targetTotal_data = 570;\n    var server_EmissionInfo = {\n      groupName: '경상국립대학교',\n      BaseYear: 2019,\n      BaseEmissions: 2650\n    };\n    const config = {\n      headers: {\n        Authorization: \"Bearer\" + \" \" + store.state.accessToken,\n        \"Content-Type\": \"text/html; charset=utf-8\"\n      }\n    };\n    // async function getcarbonEmissionRights(){\n    //     console.log(\"dawdaw\")\n    //     await axios.get(\"https://api.odcloud.kr/api/15102705/v1/uddi:64ea07ee-be47-40c9-bc23-ff901cfbdfe6&_returnType=json\" ,config).then(res => {\n    //         var a = res.data.data.filter('연도' == year)\n    //         console.log(res.data.data.filter('연도' == year))\n    //     })\n    //     .catch(error => {\n    //         alert(\"로그인 시간이 만료되었습니다.\")\n    //         console.log(error)\n    //         router.push('/');\n    //     })\n    //     .finally(() => {})\n    // }\n    // getcarbonEmissionRights()\n\n    var carbonMoney = ref(1500);\n    var increaseEmissionOfBase = server_EmissionInfo.BaseEmissions - server_targetTotal_data;\n    var profitMoney = ref(carbonMoney.value * increaseEmissionOfBase);\n    function getAmount() {\n      console.log('새로 고침');\n    }\n    return {\n      carbonMoney,\n      increaseEmissionOfBase,\n      profitMoney,\n      getAmount\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","useStore","axios","name","components","setup","store","user_group","state","selected_company","insight_selected_company","now","Date","year","getFullYear","month","getMonth","server_targetTotal_data","server_EmissionInfo","groupName","BaseYear","BaseEmissions","config","headers","Authorization","accessToken","carbonMoney","increaseEmissionOfBase","profitMoney","value","getAmount","console","log"],"sources":["C:\\Users\\user\\Desktop\\CarbonVueproject\\co2-emission-management\\vueProject\\src\\components\\nature\\progress\\dash2\\dash2.vue"],"sourcesContent":["<template>\r\n    <div> \r\n        <div class=\"title-border\">기준량 대비 탄소배출권 기대효과</div>\r\n        <div class=\"frame\" style=\"width:45vw; height:32.8vh;\">\r\n            <div id=\"profit-left\">\r\n                <img id= \"money_icon\" src=\"@/assets/money.png\">\r\n                <div class=\"dash-text\" id=\"profit-total-text\">{{profitMoney}}<span>원 이득</span></div>\r\n            </div>\r\n            <div id= \"profit-right\">\r\n                <div class=\"dash-text-middle\" style=\"text-align: left; \">현재 탄소 배출권 시세\r\n                    <img src=\"@/assets/re.png\" id=\"re-amount-btn\"  @click=\"getAmount()\">\r\n                    <div class=\"dash-text-middle dash-text-navy\">{{carbonMoney}}원/1co2eq</div>\r\n                </div>\r\n                <div class=\"dash-text-middle\" style=\"text-align: left; margin-top:6vh\">탄소 배출권 계산\r\n                    <div class=\"dash-text-middle dash-text-navy\">{{carbonMoney}}원*{{increaseEmissionOfBase}}co2eq</div>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {ref, computed} from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport axios from \"axios\";\r\n    export default {\r\n        name :\"progress_dash2\",\r\n        components:{\r\n        },\r\n        setup(){\r\n\r\n            var store =useStore()\r\n            //날짜 그룹명\r\n            var user_group = computed(()=> store.state.user_group)\r\n            var selected_company = computed(()=> store.state.insight_selected_company)\r\n\r\n            var now = new Date();\t// 현재 날짜 및 시간\r\n            var year = now.getFullYear()\t// 년도\r\n            var month = now.getMonth()\r\n\r\n            //서버\r\n            var server_targetTotal_data = 570\r\n            var server_EmissionInfo = {\r\n                groupName:'경상국립대학교',\r\n                BaseYear:2019,\r\n                BaseEmissions:2650\r\n            }\r\n            const config = {\r\n                headers:{\r\n                Authorization:\"Bearer\"+\" \"+store.state.accessToken,\r\n                \"Content-Type\": \"text/html; charset=utf-8\",\r\n                }\r\n            }\r\n            // async function getcarbonEmissionRights(){\r\n            //     console.log(\"dawdaw\")\r\n            //     await axios.get(\"https://api.odcloud.kr/api/15102705/v1/uddi:64ea07ee-be47-40c9-bc23-ff901cfbdfe6&_returnType=json\" ,config).then(res => {\r\n            //         var a = res.data.data.filter('연도' == year)\r\n            //         console.log(res.data.data.filter('연도' == year))\r\n            //     })\r\n            //     .catch(error => {\r\n            //         alert(\"로그인 시간이 만료되었습니다.\")\r\n            //         console.log(error)\r\n            //         router.push('/');\r\n            //     })\r\n            //     .finally(() => {})\r\n            // }\r\n            // getcarbonEmissionRights()\r\n\r\n            var carbonMoney = ref(1500)\r\n            var increaseEmissionOfBase = server_EmissionInfo.BaseEmissions - server_targetTotal_data\r\n            var profitMoney = ref(carbonMoney.value*increaseEmissionOfBase)\r\n\r\n            function getAmount(){\r\n                console.log('새로 고침')\r\n            }\r\n            return{\r\n                carbonMoney,\r\n                increaseEmissionOfBase,\r\n                profitMoney,\r\n                getAmount\r\n            }\r\n        }\r\n        \r\n    }\r\n</script>\r\n\r\n<style>\r\n#re-amount-btn{\r\n    margin-left:1vw; \r\n    height:2.5vh\r\n}\r\n#re-amount-btn:hover{\r\n    cursor: pointer;\r\n}\r\n.dash-text-navy{\r\n    text-align: left; \r\n    margin-top:2vh; \r\n    color:#163945; \r\n    font-size:3vh\r\n}\r\n#profit-left{\r\n    width:20vw; \r\n    height: inherit; \r\n    float:left; \r\n    margin-right:3vw;\r\n}\r\n#profit-right{\r\n    float:left; \r\n    margin-top:2vh\r\n}\r\n#money_icon{\r\n    height:16vh; \r\n    margin:4vh 5vw 2vh 5vw;\r\n}\r\n#profit-total-text{\r\n    height:3vh; \r\n    width:inherit; \r\n    text-align: center; \r\n    line-height:3vh;\r\n}\r\n#profit-total-text span{\r\n    font-size:3vh\r\n}\r\n</style>\r\n\r\n\r\n"],"mappings":"AAsBA,SAAQA,GAAG,EAAEC,QAAQ,QAAO,KAAI;AAChC,SAASC,QAAO,QAAS,MAAK;AAC9B,OAAOC,KAAI,MAAO,OAAO;AACrB,eAAe;EACXC,IAAG,EAAG,gBAAgB;EACtBC,UAAU,EAAC,CACX,CAAC;EACDC,KAAKA,CAAA,EAAE;IAEH,IAAIC,KAAI,GAAGL,QAAQ,EAAC;IACpB;IACA,IAAIM,UAAS,GAAIP,QAAQ,CAAC,MAAKM,KAAK,CAACE,KAAK,CAACD,UAAU;IACrD,IAAIE,gBAAe,GAAIT,QAAQ,CAAC,MAAKM,KAAK,CAACE,KAAK,CAACE,wBAAwB;IAEzE,IAAIC,GAAE,GAAI,IAAIC,IAAI,EAAE,EAAE;IACtB,IAAIC,IAAG,GAAIF,GAAG,CAACG,WAAW,EAAC,EAAE;IAC7B,IAAIC,KAAI,GAAIJ,GAAG,CAACK,QAAQ,EAAC;;IAEzB;IACA,IAAIC,uBAAsB,GAAI,GAAE;IAChC,IAAIC,mBAAkB,GAAI;MACtBC,SAAS,EAAC,SAAS;MACnBC,QAAQ,EAAC,IAAI;MACbC,aAAa,EAAC;IAClB;IACA,MAAMC,MAAK,GAAI;MACXC,OAAO,EAAC;QACRC,aAAa,EAAC,QAAQ,GAAC,GAAG,GAAClB,KAAK,CAACE,KAAK,CAACiB,WAAW;QAClD,cAAc,EAAE;MAChB;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,IAAIC,WAAU,GAAI3B,GAAG,CAAC,IAAI;IAC1B,IAAI4B,sBAAqB,GAAIT,mBAAmB,CAACG,aAAY,GAAIJ,uBAAsB;IACvF,IAAIW,WAAU,GAAI7B,GAAG,CAAC2B,WAAW,CAACG,KAAK,GAACF,sBAAsB;IAE9D,SAASG,SAASA,CAAA,EAAE;MAChBC,OAAO,CAACC,GAAG,CAAC,OAAO;IACvB;IACA,OAAM;MACFN,WAAW;MACXC,sBAAsB;MACtBC,WAAW;MACXE;IACJ;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}