{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-border\"\n}, \"전년도 카테고리별 탄소 배출량\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"frame\",\n  id: \"target_dash1_content\"\n};\nconst _hoisted_3 = {\n  class: \"dash-text-middle\"\n};\nconst _hoisted_4 = {\n  class: \"target-dount-legend\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_targetdonut = _resolveComponent(\"targetdonut\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString($setup.year) + \"년 카테고리별 탄소 배출량\", 1 /* TEXT */), _createVNode(_component_targetdonut, {\n    id: \"target-dount-graph\"\n  }), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categoryLastEmission, (cate, i) => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", {\n      class: \"legend-style\",\n      style: _normalizeStyle({\n        background: $setup.activeColor[i]\n      })\n    }, null, 4 /* STYLE */), _createTextVNode(_toDisplayString(cate.category), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(cate.emission) + \"kg\", 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","class","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$setup","year","_createVNode","_component_targetdonut","_hoisted_4","_Fragment","_renderList","categoryLastEmission","cate","i","style","_normalizeStyle","background","activeColor","category","emission"],"sources":["/home/hyemi/carbon/co2-emission-management/vueProject/src/components/nature/target/dash1/dash1.vue"],"sourcesContent":["<template>\n    <div> \n        <div class=\"title-border\">전년도 카테고리별 탄소 배출량</div>\n        <div class=\"frame\" id=\"target_dash1_content\">\n            <div class=\"dash-text-middle\">{{ year }}년 카테고리별 탄소 배출량</div>\n            <targetdonut id=\"target-dount-graph\"></targetdonut>\n            <div class = \"target-dount-legend\" >\n                <div v-for=\"cate, i in categoryLastEmission\">\n                    <div class=\"legend-style\" :style=\"{ background:activeColor[i]}\"></div>{{ cate.category}}<span>{{ cate.emission }}kg</span>\n                </div>\n            </div>\n                \n        </div>\n    </div>\n        \n\n</template>\n\n<script>\nimport {ref, computed} from 'vue'\nimport {useStore} from 'vuex'\nimport targetdonut from \"@/components/nature/target/dash1/targetDonutGraph\"\n    export default {\n        name :\"target_dash1\",\n        components:{\n            targetdonut\n        },\n        setup(){\n            var store = useStore()\n            //그룹명\n            var group_name = computed(()=> store.state.insight_selected_company)\n            var user_group = computed(()=> store.state.user_group)\n\n            var now = new Date();\t// 현재 날짜 및 시간\n            var year = ref(now.getFullYear()-1)\t// 년도\n            //서버\n            var server_category_data = [\n                [580, 590, 640, 575, 573, 680, 250,502,600,500,120,130],\n                [530, 495, 486, 570, 573, 664, 250,502,600,500,120,130],\n                [495, 397, 480, 390, 475, 510, 250,502,600,500,120,130],\n                [498, 401, 420, 297, 361, 483, 250,502,600,500,120,130],\n                [381, 363, 321, 350, 348, 371, 250,502,600,500,120,130],\n                [140, 143, 184, 123, 120, 212, 250,502,600,500,120,130],\n                [208, 175, 143, 167, 160, 220, 250,502,600,500,120,130],\n                [312, 274, 250, 280, 278, 320, 250,502,600,500,120,130]\n            ]\n            var sum_total_category_data = ref([])\n            sum_total_category_data.value.push(4)\n            console.log(server_category_data.value[0])\n\n            \n            for(var i=0; i<server_category_data.length; i++){\n                var sum = ref(0)\n                for(var j =0; j<server_category_data[i].length; j++){\n                    sum.value = server_category_data.value[i][j] + sum.value\n                }    \n                sum_total_category_data.value.push(sum.value)\n            }\n\n            console.log(sum_total_category_data.value)\n            var categoryLastEmission = [\n                {category:'고정연소', emission:2000 },\n                {category:'이동연소', emission:1800 },\n                {category:'탈루배출', emission:1500 },\n                {category:'폐기물 처리시설', emission:1600 },\n                {category:'비료사용', emission:1000 },\n                {category:'대학동물소유', emission:1200 },\n                {category:'산림에의한흡수', emission:680 },\n                {category:'전력', emission:820 },\n                {category:'열', emission:760 },\n                {category:'수도', emission:758 },\n                {category:'폐기물', emission:100 },\n            ]\n            var activeColor = [\n                '#9FD72A',\n                '#FFA800',\n                '#59CFE9',\n                '#B67FBF',\n                '#CA985E',\n                '#F6DD00',\n                '#3E9B96',\n                '#5E8CFF',\n                '#FF7D7D',\n                '#088AA6',\n                '#864887'\n            ]\n            return{\n                year,\n                categoryLastEmission,\n                activeColor,\n            }\n        }\n    }\n</script>\n\n<style>\n.dash-text-middle{\n    font-size:2.5vh;\n    width:inherit;\n    text-align: center;\n    margin-top:2vh;\n    font-weight: bold;\n    color:#5A5A5A;\n}\n#target_dash1_content{\n    width:40vw;\n    height: 50vh;\n}\n#target-dount-graph{\n    display:inline-block;\n    float: left;\n    width:20vw;\n    height: 30vh;\n    margin-top:7vh;\n    \n}\n.target-dount-legend{\n    overflow: auto;\n    height:30vh;\n    width: 17vw;\n    margin-top:7vh;\n    margin-left:2vw;\n    display: inline-block;\n}\n.target-dount-legend > div{\n    margin-bottom:4vh;\n    font-size:1.6vh;\n    font-weight: bolder;\n    color:#5A5A5A;\n}\n.target-dount-legend  span{\n    float: right;\n}\n.legend-style{\n    display:inline-block;\n    height:1vh;\n    width:1vh;\n    border-radius: 50%;\n    background: #5A5A5A;\n    margin-right:1vw;\n    \n}\n</style>"],"mappings":";gCAEQA,mBAAA,CAAgD;EAA3CC,KAAK,EAAC;AAAc,GAAC,kBAAgB;;EACrCA,KAAK,EAAC,OAAO;EAACC,EAAE,EAAC;;;EACbD,KAAK,EAAC;AAAkB;;EAExBA,KAAK,EAAG;AAAqB;;;uBAL1CE,mBAAA,CAYM,cAXFC,UAAgD,EAChDJ,mBAAA,CASM,OATNK,UASM,GARFL,mBAAA,CAA4D,OAA5DM,UAA4D,EAAAC,gBAAA,CAA3BC,MAAA,CAAAC,IAAI,IAAG,gBAAc,iBACtDC,YAAA,CAAmDC,sBAAA;IAAtCT,EAAE,EAAC;EAAoB,IACpCF,mBAAA,CAIM,OAJNY,UAIM,I,kBAHFT,mBAAA,CAEMU,SAAA,QAAAC,WAAA,CAFiBN,MAAA,CAAAO,oBAAoB,GAA/BC,IAAI,EAAEC,CAAC;yBAAnBd,mBAAA,CAEM,cADFH,mBAAA,CAAsE;MAAjEC,KAAK,EAAC,cAAc;MAAEiB,KAAK,EAAAC,eAAA;QAAAC,UAAA,EAAeZ,MAAA,CAAAa,WAAW,CAACJ,CAAC;MAAA;+DAAaD,IAAI,CAACM,QAAQ,kBAAEtB,mBAAA,CAAkC,cAAAO,gBAAA,CAAzBS,IAAI,CAACO,QAAQ,IAAG,IAAE,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}