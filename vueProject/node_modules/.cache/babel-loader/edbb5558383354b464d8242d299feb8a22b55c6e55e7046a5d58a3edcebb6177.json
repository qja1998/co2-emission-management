{"ast":null,"code":"import { Chart, LineElement, PointElement, LineController, CategoryScale, LinearScale, LogarithmicScale, RadialLinearScale, TimeScale, Decimation, Filler, Title, Tooltip } from 'chart.js';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nChart.register(LineElement, PointElement, LineController, CategoryScale, LinearScale, LogarithmicScale, RadialLinearScale, TimeScale, Decimation, Filler, Title, Tooltip, annotationPlugin);\nexport default {\n  props: {\n    charData: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'Setember', 'October', 'November', 'December'],\n      datasets: [{\n        label: '총 탄소 배출량',\n        data: [530, 495, 486, 570, 573, 664, 667, 663, 660, 670, 673, 750],\n        backgroundColor: '#3DC984',\n        barThickness: 30\n      }]\n    },\n    chartOptions: {\n      type: Object,\n      default: null\n    }\n  },\n  data() {\n    return {\n      myChart: null\n    };\n  },\n  mounted() {\n    this.fillData();\n  },\n  methods: {\n    fillData() {\n      const ctx = document.getElementById('planet-chart').getContext('2d');\n      this.myChart = new Chart(ctx, {\n        type: 'bar',\n        data: this.charData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: true,\n              position: 'top'\n            },\n            annotation: {\n              annotations: {\n                line1: {\n                  type: 'line',\n                  xMin: 590,\n                  yMax: 590,\n                  borderColor: '#FF3B3B',\n                  borderWidth: 2\n                }\n              }\n            }\n          },\n          scales: {\n            x: {\n              grid: {\n                display: false\n              }\n            },\n            y: {\n              stacked: true,\n              display: true\n            }\n          }\n        }\n      });\n    },\n    updateChart() {\n      if (this.myChart) this.myChart.destroy();\n      this.fillData();\n    }\n  }\n};","map":{"version":3,"names":["Chart","LineElement","PointElement","LineController","CategoryScale","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","Decimation","Filler","Title","Tooltip","annotationPlugin","register","props","charData","labels","datasets","label","data","backgroundColor","barThickness","chartOptions","type","Object","default","myChart","mounted","fillData","methods","ctx","document","getElementById","getContext","options","responsive","maintainAspectRatio","plugins","legend","display","position","annotation","annotations","line1","xMin","yMax","borderColor","borderWidth","scales","x","grid","y","stacked","updateChart","destroy"],"sources":["C:\\Users\\ohminjin\\Desktop\\캡스톤\\co2-emission-management\\vueProject\\src\\components\\evaluation\\dash3\\graph.vue"],"sourcesContent":["<template>\r\n    <canvas id=\"planet-chart\"></canvas>\r\n</template>\r\n\r\n<script>\r\nimport {Chart, LineElement, PointElement, LineController, CategoryScale, LinearScale, LogarithmicScale, RadialLinearScale, TimeScale, Decimation, Filler, Title, Tooltip} from 'chart.js'\r\nimport annotationPlugin from 'chartjs-plugin-annotation'\r\n\r\nChart.register(\r\n    LineElement,\r\n    PointElement,\r\n    LineController,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LogarithmicScale,\r\n    RadialLinearScale,\r\n    TimeScale,\r\n    Decimation,\r\n    Filler,\r\n    Title,\r\n    Tooltip,\r\n    annotationPlugin\r\n)\r\n\r\nexport default {\r\n    props: {\r\n        charData: {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','Setember','October','November','December'],\r\n            datasets: [\r\n                {\r\n                    label:'총 탄소 배출량',\r\n                    data: [530, 495, 486, 570, 573, 664, 667, 663, 660, 670, 673, 750],\r\n                    backgroundColor : '#3DC984',\r\n                    barThickness: 30,\r\n                },\r\n            ]\r\n        },\r\n        chartOptions: {\r\n            type: Object,\r\n            default: null\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            myChart: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fillData()\r\n    },\r\n    methods: {\r\n        fillData() {\r\n            const ctx = document.getElementById('planet-chart').getContext('2d')\r\n            this.myChart = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: this.charData,\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    plugins:{\r\n                        legend:{\r\n                            display:true,\r\n                            position:'top',\r\n                        },\r\n                        annotation: {\r\n                            annotations: {\r\n                                line1: {\r\n                                    type: 'line',\r\n                                    xMin: 590,\r\n                                    yMax: 590,\r\n                                    borderColor: '#FF3B3B',\r\n                                    borderWidth: 2\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    scales:{\r\n                        x:{\r\n                            grid:{\r\n                                display:false\r\n                            }\r\n                        },\r\n                        y:{\r\n                            stacked:true,\r\n                            display:true,\r\n                        },\r\n                    },\r\n                }\r\n            })\r\n        },\r\n        updateChart(){\r\n            if (this.myChart) this.myChart.destroy()\r\n            this.fillData()\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"AAKA,SAAQA,KAAK,EAAEC,WAAW,EAAEC,YAAY,EAAEC,cAAc,EAAEC,aAAa,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,QAAO,UAAS;AACxL,OAAOC,gBAAe,MAAO,2BAA0B;AAEvDb,KAAK,CAACc,QAAQ,CACVb,WAAW,EACXC,YAAY,EACZC,cAAc,EACdC,aAAa,EACbC,WAAW,EACXC,gBAAgB,EAChBC,iBAAiB,EACjBC,SAAS,EACTC,UAAU,EACVC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,gBACJ;AAEA,eAAe;EACXE,KAAK,EAAE;IACHC,QAAQ,EAAE;MACNC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAC,QAAQ,EAAC,UAAU,EAAC,SAAS,EAAC,UAAU,EAAC,UAAU,CAAC;MAC5HC,QAAQ,EAAE,CACN;QACIC,KAAK,EAAC,UAAU;QAChBC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAClEC,eAAc,EAAI,SAAS;QAC3BC,YAAY,EAAE;MAClB,CAAC;IAET,CAAC;IACDC,YAAY,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACb;EACJ,CAAC;EACDN,IAAIA,CAAA,EAAG;IACH,OAAO;MACHO,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,QAAQ,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACLD,QAAQA,CAAA,EAAG;MACP,MAAME,GAAE,GAAIC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,UAAU,CAAC,IAAI;MACnE,IAAI,CAACP,OAAM,GAAI,IAAI3B,KAAK,CAAC+B,GAAG,EAAE;QAC1BP,IAAI,EAAE,KAAK;QACXJ,IAAI,EAAE,IAAI,CAACJ,QAAQ;QACnBmB,OAAO,EAAE;UACLC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE,KAAK;UAC1BC,OAAO,EAAC;YACJC,MAAM,EAAC;cACHC,OAAO,EAAC,IAAI;cACZC,QAAQ,EAAC;YACb,CAAC;YACDC,UAAU,EAAE;cACRC,WAAW,EAAE;gBACTC,KAAK,EAAE;kBACHpB,IAAI,EAAE,MAAM;kBACZqB,IAAI,EAAE,GAAG;kBACTC,IAAI,EAAE,GAAG;kBACTC,WAAW,EAAE,SAAS;kBACtBC,WAAW,EAAE;gBACjB;cACJ;YACJ;UACJ,CAAC;UACDC,MAAM,EAAC;YACHC,CAAC,EAAC;cACEC,IAAI,EAAC;gBACDX,OAAO,EAAC;cACZ;YACJ,CAAC;YACDY,CAAC,EAAC;cACEC,OAAO,EAAC,IAAI;cACZb,OAAO,EAAC;YACZ;UACJ;QACJ;MACJ,CAAC;IACL,CAAC;IACDc,WAAWA,CAAA,EAAE;MACT,IAAI,IAAI,CAAC3B,OAAO,EAAE,IAAI,CAACA,OAAO,CAAC4B,OAAO,CAAC;MACvC,IAAI,CAAC1B,QAAQ,CAAC;IAClB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}