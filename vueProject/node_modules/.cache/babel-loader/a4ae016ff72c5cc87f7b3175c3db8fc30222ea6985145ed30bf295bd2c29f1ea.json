{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { XlsxRead, XlsxTable, XlsxSheets, XlsxJson, XlsxWorkbook, XlsxSheet, XlsxDownload } from \"/home/hyemi/carbon/co2-emission-management/vueProject/node_modules/vue3-xlsx\";\nimport { useStore } from 'vuex';\nexport default {\n  components: {\n    XlsxRead,\n    XlsxTable,\n    XlsxSheets,\n    XlsxJson,\n    XlsxWorkbook,\n    XlsxSheet,\n    XlsxDownload\n  },\n  data() {\n    return {\n      file: null,\n      selectedSheet: null,\n      sheetName: null,\n      sheets: [{\n        name: \"전력사용양식\",\n        data: [{\n          탄소배출내용: String,\n          시작날짜: Date,\n          종료날짜: Date,\n          배출시설명: null,\n          운영주체: null,\n          공급처: null,\n          전력사용량: Number\n        }]\n      }],\n      collection: [{\n        a: 1,\n        b: 2\n      }],\n      store: useStore()\n    };\n  },\n  methods: {\n    onChange(event) {\n      this.file = event.target.files ? event.target.files[0] : null;\n    },\n    addSheet() {\n      this.sheets.push({\n        name: this.sheetName,\n        data: [...this.collection]\n      });\n      this.sheetName = '전력사용양식';\n    },\n    registerExcel(sheets) {\n      console.log(sheets);\n      info_list = {\n        Type: \"7\",\n        DetailType: \"전력\",\n        StartDate: \"\",\n        EndDate: \"\",\n        Location: \"\",\n        scope: 2,\n        data: \"\",\n        emissions: \"\",\n        Carbonunit: unit_s,\n        CarbonActivity: \"\",\n        kind: \"\",\n        Division: {\n          건물명: \"\",\n          운영주체: \"\",\n          공급처: \"\"\n        }\n      };\n      for (i == 0; i < sheets.lenght; i++) {\n        info_list = {\n          Type: \"7\",\n          DetailType: \"전력\",\n          StartDate: sheets[i].시작날짜,\n          EndDate: sheets[i].종료날짜,\n          Location: \"\",\n          scope: 2,\n          data: sheets[i].전력사용량,\n          emissions: \"\",\n          Carbonunit: \"kg\",\n          CarbonActivity: sheets[i].탄소배출내용,\n          kind: \"\",\n          Division: {\n            건물명: \"\",\n            운영주체: \"\",\n            공급처: \"\"\n          }\n        };\n        store.commit(\"SetTableContent\", info_list);\n      }\n    }\n  }\n};","map":{"version":3,"names":["XlsxRead","XlsxTable","XlsxSheets","XlsxJson","XlsxWorkbook","XlsxSheet","XlsxDownload","useStore","components","data","file","selectedSheet","sheetName","sheets","name","탄소배출내용","String","시작날짜","Date","종료날짜","배출시설명","운영주체","공급처","전력사용량","Number","collection","a","b","store","methods","onChange","event","target","files","addSheet","push","registerExcel","console","log","info_list","Type","DetailType","StartDate","EndDate","Location","scope","emissions","Carbonunit","unit_s","CarbonActivity","kind","Division","건물명","i","lenght","commit"],"sources":["/home/hyemi/carbon/co2-emission-management/vueProject/src/components/measure/Divide-carbon/excel/Power_usage_excel.vue"],"sourcesContent":["<template>\n    <div style=\"padding:15vh\">\n        <div style=\"font-size:4vh;\">엑셀 파일로 일괄 등록\n          <div style=\"font-size:2vh; font-weight:normal; margin-top:4vh\">엑셀파일을 이용하여 전력 사용에 대한 데이터를 한번에 등록할 수 있습니다.<br>\n            정해진 엑셀 양식을 다운로드 받아 양식에 따라 데이터를 작성 후 엑셀 파일을 업로드하면 전력 사용 내역이 일괄 등록됩니다.\n          </div>\n\n            <section>\n                <xlsx-workbook>\n                  <xlsx-sheet\n                      :collection=\"sheet.data\"\n                      v-for=\"sheet in sheets\"\n                      :key=\"sheet.name\"\n                      :sheet-name=\"sheet.name\"\n                  />\n                  <xlsx-download>\n                      <button class=\"excel-down-btn\">엑셀 양식 다운로드</button>\n                  </xlsx-download>\n                </xlsx-workbook>\n            </section>\n\n            <div style=\"border:1px solid #D4D4D4; padding:3vh 2vw 2vw 5vh; margin-top:5vh; border-radius: 1vh;\">\n              <span style=\"font-size:2vh; font-weight:bold; margin-right:2vw\"> 파일 선택 </span>\n              <input type=\"file\" @change=\"onChange\" />\n              <xlsx-read :file=\"file\">\n                <xlsx-sheets>\n                  <template #default=\"{sheets}\">\n                    <select v-model=\"selectedSheet\">\n                      <option v-for=\"sheet in sheets\" :key=\"sheet\" :value=\"sheet\">\n                        {{ sheet }}\n                      </option>\n                    </select>\n                  </template>\n                </xlsx-sheets>\n                <xlsx-json :sheet=\"selectedSheet\">\n                  <template #default=\"{collection}\">\n                    <button class =\"clickbtn\" style=\"float:right; margin-top:5vh\" @click=\"registerExcel(collection)\">엑셀 등록하기</button>\n                  </template>\n                </xlsx-json>\n              </xlsx-read>\n            </div>\n            \n        </div>\n      \n\n\n      \n    </div>\n  </template>\n  \n  <script>\n  import { XlsxRead, XlsxTable, XlsxSheets, XlsxJson, XlsxWorkbook, XlsxSheet, XlsxDownload } from \"/home/hyemi/carbon/co2-emission-management/vueProject/node_modules/vue3-xlsx\"\n  import {useStore} from 'vuex'\n  export default {\n    components: {\n      XlsxRead,\n      XlsxTable,\n      XlsxSheets,\n      XlsxJson,\n      XlsxWorkbook,\n      XlsxSheet,\n      XlsxDownload\n    },\n    data() {\n      return {\n        file: null,\n        selectedSheet: null,\n        sheetName: null,\n        sheets: [{ name: \"전력사용양식\", data: [{ 탄소배출내용: String, 시작날짜: Date, 종료날짜:Date, 배출시설명:null, 운영주체:null,공급처:null,전력사용량:Number}] }],\n        collection: [{ a: 1, b: 2 }],\n        store : useStore(),\n      };\n    },\n    methods: {\n      onChange(event) {\n        this.file = event.target.files ? event.target.files[0] : null;\n      },\n      addSheet() {\n        this.sheets.push({ name: this.sheetName, data: [...this.collection] });\n        this.sheetName = '전력사용양식';\n        \n      },\n      registerExcel(sheets){\n        console.log(sheets)\n        info_list={\n            Type:\"7\",\n            DetailType:\"전력\",\n            StartDate:\"\",\n            EndDate:\"\",\n            Location:\"\",\n            scope:2,\n            data:\"\",\n            emissions:\"\",\n            Carbonunit:unit_s,\n            CarbonActivity:\"\",\n            kind:\"\",\n            Division:{건물명:\"\",운영주체:\"\",공급처:\"\"}\n        }\n        for(i==0; i<sheets.lenght; i++){\n          info_list={\n            Type:\"7\",\n            DetailType:\"전력\",\n            StartDate: sheets[i].시작날짜,\n            EndDate:sheets[i].종료날짜,\n            Location:\"\",\n            scope:2,\n            data:sheets[i].전력사용량,\n            emissions:\"\",\n            Carbonunit:\"kg\",\n            CarbonActivity:sheets[i].탄소배출내용,\n            kind:\"\",\n            Division:{건물명:\"\",운영주체:\"\",공급처:\"\"}\n          }\n          store.commit(\"SetTableContent\",info_list)\n        }\n        \n      }\n    }\n  };\n  </script>\n\n<style>\n  .excel-down-btn{\n    margin-top:3vh; \n    background: none; \n    border:none; \n    font-size:2vh; \n    color:#4FB0DA;\n    text-decoration: underline;\n  }\n  .excel-down-btn:hover{\n    cursor: pointer;\n  }\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}