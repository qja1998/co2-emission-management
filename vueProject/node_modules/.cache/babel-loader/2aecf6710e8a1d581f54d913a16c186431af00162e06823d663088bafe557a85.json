{"ast":null,"code":"import navigation from \"@/components/Navigation.vue\";\nimport evaluation_header from \"@/components/evaluation/Header.vue\";\nimport evaluation_dash1 from \"@/components/evaluation/dash1/dashboard1_evaluation.vue\";\nimport axios from \"axios\";\nimport { useStore } from \"vuex\";\nimport { computed, ref } from \"vue\";\nexport default {\n  name: \"evaluation\",\n  components: {\n    navigation,\n    evaluation_header,\n    evaluation_dash1\n  },\n  setup() {\n    const store = useStore();\n    var month = computed(() => store.state.insight_month + 1);\n    var year = computed(() => store.state.insight_year);\n    var scope1 = ref(0);\n    var scope2 = ref(0);\n    var scope3 = ref(0);\n    var total_emission = ref(0);\n    var rerender_signal = ref(0);\n    var group_list = computed(() => store.state.group_list).value;\n    var selected_company = ref(group_list[0]);\n    const data = false;\n    function change_company() {\n      store.commit(\"insight_select_company\", selected_company.value);\n      console.log(\"11111111111111111111111111111111\" + store.state.insight_selected_company);\n      get_total_emission_month();\n      get_total_emission_year();\n    }\n    async function get_total_emission_month() {\n      await axios.get(\"Company/Preview/\" + selected_company.value + \"/\" + year.value + \"-\" + month.value + \"-01/\" + year.value + \"-\" + month.value + \"-28\", config).then(res => {\n        console.log(res.data);\n        console.log(\"연월\" + year.value + month.value);\n        scope1.value = res.data.Scopes[0];\n        scope2.value = res.data.Scopes[1];\n        scope3.value = res.data.Scopes[2];\n        total_emission = res.data.Scopes.reduce((a, b) => a + b, 0);\n        store.commit(\"set_scopes\", res.data.Scopes);\n        store.commit(\"SetDetailEmission\", res.data.EmissionList);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n    async function get_total_emission_year() {\n      await axios.get(\"Company/Preview/\" + selected_company.value + \"/\" + year.value + \"-01-01/\" + year.value + \"-12-28\", config).then(res => {\n        console.log(res.data);\n        console.log(\"연월\" + year.value);\n        scope1.value = res.data.Scopes[0];\n        scope2.value = res.data.Scopes[1];\n        scope3.value = res.data.Scopes[2];\n        total_emission = res.data.Scopes.reduce((a, b) => a + b, 0);\n        store.commit(\"set_scopes\", res.data.Scopes);\n        store.commit(\"SetDetailEmission\", res.data.EmissionList);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n    return {\n      group_list,\n      selected_company,\n      change_company,\n      data\n    };\n  }\n};","map":{"version":3,"names":["navigation","evaluation_header","evaluation_dash1","axios","useStore","computed","ref","name","components","setup","store","month","state","insight_month","year","insight_year","scope1","scope2","scope3","total_emission","rerender_signal","group_list","value","selected_company","data","change_company","commit","console","log","insight_selected_company","get_total_emission_month","get_total_emission_year","get","config","then","res","Scopes","reduce","a","b","EmissionList","catch","error","finally"],"sources":["C:\\Users\\ohminjin\\Desktop\\캡스톤\\co2-emission-management\\vueProject\\src\\views\\Neutrality\\evaluationCarbonPreview.vue"],"sourcesContent":["<template>\r\n    <div class=\"measure-main\">\r\n        <navigation class=\"navigation\"/>\r\n        <div class=\"contents\">\r\n            <evaluation_header/>\r\n            <div class=\"background\">\r\n              <div style=\"height:140vh\">\r\n                <select class=\"select_group\" v-model=\"selected_company\" @change=\"change_company()\">\r\n                  <option v-for=\"item in group_list\" :key=\"item\">{{ item }}</option>\r\n                </select>\r\n                <span class=\"header-page\">탄소 배출량 평가</span><br>\r\n                <span class=\"subHeader-page\">Carbon Emissions Evaluation</span>\r\n                <div>\r\n                    <div class=\"non-data\" v-if = \"data == false\">\r\n                      <img src=\"@/assets/evaluationGraph/NonData.png\" alt=\"기준 연도를 입력해주세요.\">\r\n                    </div>\r\n                    <div v-else-if = \"data == true\" style=\"height: 50vh\"><evaluation_dash1/></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </template>\r\n  \r\n  \r\n  <style>\r\n  .background{\r\n      background:#F7F9FB;\r\n      min-height:86vh;\r\n      height: inherit;\r\n      padding:5vh 2.5vw;\r\n  }\r\n  .header-page{\r\n      color:#5A5A5A;\r\n      font-size:1.5rem;\r\n      font-weight :600;\r\n  }\r\n  .subHeader-page{\r\n      color:#5A5A5A;\r\n      font-size:1rem;\r\n      font-weight:200;\r\n  }\r\n  .non-data{\r\n    margin-top: 20vh;\r\n  }\r\n  </style>\r\n  \r\n  <script>\r\n  import navigation from \"@/components/Navigation.vue\"\r\n  import evaluation_header from \"@/components/evaluation/Header.vue\"\r\n  import evaluation_dash1 from \"@/components/evaluation/dash1/dashboard1_evaluation.vue\"\r\n  import axios from \"axios\"\r\n  import { useStore } from \"vuex\"\r\n  import {computed, ref} from \"vue\"\r\n\r\n  \r\n    export default {\r\n        name :\"evaluation\",\r\n        components:{\r\n            navigation,\r\n            evaluation_header,\r\n            evaluation_dash1\r\n        },\r\n        setup() {\r\n            const store = useStore();\r\n            var month = computed(() => store.state.insight_month+1);\r\n            var year = computed(() => store.state.insight_year);\r\n            var scope1 = ref(0)\r\n            var scope2 = ref(0)\r\n            var scope3 = ref(0)\r\n            var total_emission = ref(0)\r\n            var rerender_signal = ref(0)\r\n            var group_list = computed(() => store.state.group_list).value\r\n            var selected_company = ref(group_list[0])\r\n            const data = false\r\n\r\n            function change_company(){\r\n            store.commit(\"insight_select_company\",selected_company.value);\r\n            console.log(\"11111111111111111111111111111111\"+ store.state.insight_selected_company)\r\n            get_total_emission_month()\r\n            get_total_emission_year()\r\n          }\r\n          async function get_total_emission_month(){\r\n              await axios.get(\"Company/Preview/\"+selected_company.value+\"/\"+year.value+\"-\"+month.value+\"-01/\"+year.value+\"-\"+month.value+\"-28\",config).then(res => {\r\n                    console.log(res.data)\r\n                    console.log(\"연월\"+year.value+month.value)\r\n                    scope1.value = res.data.Scopes[0]\r\n                    scope2.value = res.data.Scopes[1]\r\n                    scope3.value = res.data.Scopes[2]\r\n                    total_emission  = res.data.Scopes.reduce((a, b) => a + b, 0)\r\n                    store.commit(\"set_scopes\",res.data.Scopes);\r\n                    store.commit(\"SetDetailEmission\",res.data.EmissionList);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n                .finally(() => {\r\n                  rerender_signal.value +=1\r\n                })\r\n            }\r\n            async function get_total_emission_year(){\r\n              await axios.get(\"Company/Preview/\"+selected_company.value+\"/\"+year.value+\"-01-01/\"+year.value+\"-12-28\",config).then(res => {\r\n                    console.log(res.data)\r\n                    console.log(\"연월\"+year.value)\r\n                    scope1.value = res.data.Scopes[0]\r\n                    scope2.value = res.data.Scopes[1]\r\n                    scope3.value = res.data.Scopes[2]\r\n                    total_emission  = res.data.Scopes.reduce((a, b) => a + b, 0)\r\n                    store.commit(\"set_scopes\",res.data.Scopes);\r\n                    store.commit(\"SetDetailEmission\",res.data.EmissionList);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n                .finally(() => {\r\n                  rerender_signal.value +=1\r\n                })\r\n            }\r\n          return{\r\n            group_list, selected_company, change_company, data\r\n          }\r\n        }\r\n    }\r\n  </script>"],"mappings":"AAgDE,OAAOA,UAAS,MAAO,6BAA4B;AACnD,OAAOC,iBAAgB,MAAO,oCAAmC;AACjE,OAAOC,gBAAe,MAAO,yDAAwD;AACrF,OAAOC,KAAI,MAAO,OAAM;AACxB,SAASC,QAAO,QAAS,MAAK;AAC9B,SAAQC,QAAQ,EAAEC,GAAG,QAAO,KAAI;AAG9B,eAAe;EACXC,IAAG,EAAG,YAAY;EAClBC,UAAU,EAAC;IACPR,UAAU;IACVC,iBAAiB;IACjBC;EACJ,CAAC;EACDO,KAAKA,CAAA,EAAG;IACJ,MAAMC,KAAI,GAAIN,QAAQ,EAAE;IACxB,IAAIO,KAAI,GAAIN,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACC,aAAa,GAAC,CAAC,CAAC;IACvD,IAAIC,IAAG,GAAIT,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACG,YAAY,CAAC;IACnD,IAAIC,MAAK,GAAIV,GAAG,CAAC,CAAC;IAClB,IAAIW,MAAK,GAAIX,GAAG,CAAC,CAAC;IAClB,IAAIY,MAAK,GAAIZ,GAAG,CAAC,CAAC;IAClB,IAAIa,cAAa,GAAIb,GAAG,CAAC,CAAC;IAC1B,IAAIc,eAAc,GAAId,GAAG,CAAC,CAAC;IAC3B,IAAIe,UAAS,GAAIhB,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACS,UAAU,CAAC,CAACC,KAAI;IAC5D,IAAIC,gBAAe,GAAIjB,GAAG,CAACe,UAAU,CAAC,CAAC,CAAC;IACxC,MAAMG,IAAG,GAAI,KAAI;IAEjB,SAASC,cAAcA,CAAA,EAAE;MACzBf,KAAK,CAACgB,MAAM,CAAC,wBAAwB,EAACH,gBAAgB,CAACD,KAAK,CAAC;MAC7DK,OAAO,CAACC,GAAG,CAAC,kCAAkC,GAAElB,KAAK,CAACE,KAAK,CAACiB,wBAAwB;MACpFC,wBAAwB,EAAC;MACzBC,uBAAuB,EAAC;IAC1B;IACA,eAAeD,wBAAwBA,CAAA,EAAE;MACrC,MAAM3B,KAAK,CAAC6B,GAAG,CAAC,kBAAkB,GAACT,gBAAgB,CAACD,KAAK,GAAC,GAAG,GAACR,IAAI,CAACQ,KAAK,GAAC,GAAG,GAACX,KAAK,CAACW,KAAK,GAAC,MAAM,GAACR,IAAI,CAACQ,KAAK,GAAC,GAAG,GAACX,KAAK,CAACW,KAAK,GAAC,KAAK,EAACW,MAAM,CAAC,CAACC,IAAI,CAACC,GAAE,IAAK;QAC/IR,OAAO,CAACC,GAAG,CAACO,GAAG,CAACX,IAAI;QACpBG,OAAO,CAACC,GAAG,CAAC,IAAI,GAACd,IAAI,CAACQ,KAAK,GAACX,KAAK,CAACW,KAAK;QACvCN,MAAM,CAACM,KAAI,GAAIa,GAAG,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC;QAChCnB,MAAM,CAACK,KAAI,GAAIa,GAAG,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC;QAChClB,MAAM,CAACI,KAAI,GAAIa,GAAG,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC;QAChCjB,cAAa,GAAKgB,GAAG,CAACX,IAAI,CAACY,MAAM,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAA,GAAIC,CAAC,EAAE,CAAC;QAC3D7B,KAAK,CAACgB,MAAM,CAAC,YAAY,EAACS,GAAG,CAACX,IAAI,CAACY,MAAM,CAAC;QAC1C1B,KAAK,CAACgB,MAAM,CAAC,mBAAmB,EAACS,GAAG,CAACX,IAAI,CAACgB,YAAY,CAAC;MAC3D,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZf,OAAO,CAACC,GAAG,CAACc,KAAK;MACrB,CAAC,EACAC,OAAO,CAAC,MAAM;QACbvB,eAAe,CAACE,KAAI,IAAI;MAC1B,CAAC;IACL;IACA,eAAeS,uBAAuBA,CAAA,EAAE;MACtC,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,kBAAkB,GAACT,gBAAgB,CAACD,KAAK,GAAC,GAAG,GAACR,IAAI,CAACQ,KAAK,GAAC,SAAS,GAACR,IAAI,CAACQ,KAAK,GAAC,QAAQ,EAACW,MAAM,CAAC,CAACC,IAAI,CAACC,GAAE,IAAK;QACrHR,OAAO,CAACC,GAAG,CAACO,GAAG,CAACX,IAAI;QACpBG,OAAO,CAACC,GAAG,CAAC,IAAI,GAACd,IAAI,CAACQ,KAAK;QAC3BN,MAAM,CAACM,KAAI,GAAIa,GAAG,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC;QAChCnB,MAAM,CAACK,KAAI,GAAIa,GAAG,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC;QAChClB,MAAM,CAACI,KAAI,GAAIa,GAAG,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC;QAChCjB,cAAa,GAAKgB,GAAG,CAACX,IAAI,CAACY,MAAM,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAA,GAAIC,CAAC,EAAE,CAAC;QAC3D7B,KAAK,CAACgB,MAAM,CAAC,YAAY,EAACS,GAAG,CAACX,IAAI,CAACY,MAAM,CAAC;QAC1C1B,KAAK,CAACgB,MAAM,CAAC,mBAAmB,EAACS,GAAG,CAACX,IAAI,CAACgB,YAAY,CAAC;MAC3D,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZf,OAAO,CAACC,GAAG,CAACc,KAAK;MACrB,CAAC,EACAC,OAAO,CAAC,MAAM;QACbvB,eAAe,CAACE,KAAI,IAAI;MAC1B,CAAC;IACL;IACF,OAAM;MACJD,UAAU;MAAEE,gBAAgB;MAAEE,cAAc;MAAED;IAChD;EACF;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}