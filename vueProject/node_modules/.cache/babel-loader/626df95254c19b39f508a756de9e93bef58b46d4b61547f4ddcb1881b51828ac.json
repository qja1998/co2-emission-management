{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: \"predict_dash4\",\n  setup() {\n    var store = useStore();\n    //그룹명, 날짜\n    var selected_company = computed(() => store.state.insight_selected_company);\n    var user_group = computed(() => store.state.user_group);\n    var now = new Date(); // 현재 날짜 및 시간\n    var year = now.getFullYear(); // 년도\n    var month = now.getMonth(); //월\n\n    //서버\n    var server_total_data = computed(() => store.state.getTotalLastDataList);\n    var server_predict_total_data = computed(() => store.state.getPredictTotal);\n    var total_emission = ref({\n      data: 0,\n      predictData: 0\n    });\n    console.log(server_predict_total_data.value);\n    total_emission.value.data = server_total_data.value[month];\n    total_emission.value.predictData = server_predict_total_data.value[0];\n    console.log(total_emission.value);\n    var percent = Math.round(percentage(total_emission.value));\n    function percentage(value) {\n      return (value.predictData - value.data) / value.data * 100;\n    }\n    var mg = ref(false);\n    if (total_emission.value.predictData > 1000) {\n      mg.value = true;\n      total_emission.value.predictData = (total_emission.value.predictData / 1000).toFixed(1);\n    }\n    return {\n      total_emission,\n      percent,\n      mg\n    };\n  },\n  components: {}\n};","map":{"version":3,"names":["ref","computed","useStore","name","setup","store","selected_company","state","insight_selected_company","user_group","now","Date","year","getFullYear","month","getMonth","server_total_data","getTotalLastDataList","server_predict_total_data","getPredictTotal","total_emission","data","predictData","console","log","value","percent","Math","round","percentage","mg","toFixed","components"],"sources":["C:\\Users\\user\\Desktop\\CarbonVueproject\\co2-emission-management\\vueProject\\src\\components\\predict\\dash4\\dash4.vue"],"sourcesContent":["<template>\r\n    <div style=\"\">\r\n        <div class=\"title-border\">다음달 총 탄소 배출량 예측</div>\r\n        <div class=\"frame\" id=\"frame-dash4\">\r\n            <div class=\"dash4-text\" v-if=\"mg == false\">{{total_emission.predictData}}\r\n                <span>KgCO2eq</span>\r\n                <div>\r\n                    <span v-if=\"percent<0\" style=\"color:#3DC984\">↘{{-percent}}%</span>\r\n                    <span v-if=\"percent>0\" style=\"color:#FF0000\">↗{{percent}}%</span>\r\n                    <span>　vs last month</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"dash4-text\"  v-else-if=\"mg == true\">{{total_emission.predictData}}\r\n                <span>MgCO2eq</span>\r\n                <div>\r\n                    <span v-if=\"percent<0\" style=\"color:#3DC984\">↘{{-percent}}%</span>\r\n                    <span v-if=\"percent>0\" style=\"color:#FF0000\">↗{{percent}}%</span>\r\n                    <span>　vs last month</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style>\r\n    #frame-dash4{\r\n        width:20vw;\r\n    }\r\n    .dash4-text{\r\n        margin:6vh 1.3vw;\r\n        color:#163945;\r\n        height:15vh;\r\n        line-height:6vh;\r\n        display: inline-block;\r\n        font-size:6.5vh;\r\n        font-weight: 900;\r\n    }\r\n    .dash4-text > span {\r\n        font-size:3vh;\r\n        margin-left:1vw;\r\n        display: inline-block;\r\n    }\r\n    .dash4-text > div {\r\n        color:#A8A8A8;\r\n        font-size:2vh;\r\n    }\r\n</style>\r\n\r\n\r\n<script>\r\nimport {ref,computed} from 'vue'\r\nimport {useStore} from 'vuex'\r\n\r\n    export default {\r\n        name :\"predict_dash4\",\r\n        setup(){\r\n            var store = useStore()\r\n            //그룹명, 날짜\r\n            var selected_company = computed(()=> store.state.insight_selected_company)\r\n            var user_group = computed(()=> store.state.user_group)\r\n            var now = new Date();\t// 현재 날짜 및 시간\r\n            var year = now.getFullYear()\t// 년도\r\n            var month = now.getMonth() //월\r\n\r\n            //서버\r\n            var server_total_data = computed(()=> store.state.getTotalLastDataList)\r\n            var server_predict_total_data = computed(()=> store.state.getPredictTotal)\r\n\r\n            var total_emission = ref({\r\n                data:0,\r\n                predictData:0\r\n            })\r\n\r\n            console.log(server_predict_total_data.value)\r\n            total_emission.value.data = server_total_data.value[month]\r\n            total_emission.value.predictData = server_predict_total_data.value[0]\r\n\r\n            console.log(total_emission.value)\r\n\r\n            var percent =Math.round(percentage(total_emission.value))\r\n            function percentage(value){\r\n                return ((value.predictData-value.data)/value.data)*100\r\n            }\r\n            \r\n            var mg = ref(false)\r\n            \r\n            if(total_emission.value.predictData>1000){\r\n                mg.value = true\r\n                total_emission.value.predictData = (total_emission.value.predictData/1000).toFixed(1)\r\n            }\r\n            return{total_emission,percent,mg}\r\n        },\r\n        components:{\r\n        \r\n        }\r\n    }\r\n</script>"],"mappings":"AAoDA,SAAQA,GAAG,EAACC,QAAQ,QAAO,KAAI;AAC/B,SAAQC,QAAQ,QAAO,MAAK;AAExB,eAAe;EACXC,IAAG,EAAG,eAAe;EACrBC,KAAKA,CAAA,EAAE;IACH,IAAIC,KAAI,GAAIH,QAAQ,EAAC;IACrB;IACA,IAAII,gBAAe,GAAIL,QAAQ,CAAC,MAAKI,KAAK,CAACE,KAAK,CAACC,wBAAwB;IACzE,IAAIC,UAAS,GAAIR,QAAQ,CAAC,MAAKI,KAAK,CAACE,KAAK,CAACE,UAAU;IACrD,IAAIC,GAAE,GAAI,IAAIC,IAAI,EAAE,EAAE;IACtB,IAAIC,IAAG,GAAIF,GAAG,CAACG,WAAW,EAAC,EAAE;IAC7B,IAAIC,KAAI,GAAIJ,GAAG,CAACK,QAAQ,EAAC,EAAE;;IAE3B;IACA,IAAIC,iBAAgB,GAAIf,QAAQ,CAAC,MAAKI,KAAK,CAACE,KAAK,CAACU,oBAAoB;IACtE,IAAIC,yBAAwB,GAAIjB,QAAQ,CAAC,MAAKI,KAAK,CAACE,KAAK,CAACY,eAAe;IAEzE,IAAIC,cAAa,GAAIpB,GAAG,CAAC;MACrBqB,IAAI,EAAC,CAAC;MACNC,WAAW,EAAC;IAChB,CAAC;IAEDC,OAAO,CAACC,GAAG,CAACN,yBAAyB,CAACO,KAAK;IAC3CL,cAAc,CAACK,KAAK,CAACJ,IAAG,GAAIL,iBAAiB,CAACS,KAAK,CAACX,KAAK;IACzDM,cAAc,CAACK,KAAK,CAACH,WAAU,GAAIJ,yBAAyB,CAACO,KAAK,CAAC,CAAC;IAEpEF,OAAO,CAACC,GAAG,CAACJ,cAAc,CAACK,KAAK;IAEhC,IAAIC,OAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,UAAU,CAACT,cAAc,CAACK,KAAK,CAAC;IACxD,SAASI,UAAUA,CAACJ,KAAK,EAAC;MACtB,OAAQ,CAACA,KAAK,CAACH,WAAW,GAACG,KAAK,CAACJ,IAAI,IAAEI,KAAK,CAACJ,IAAI,GAAE,GAAE;IACzD;IAEA,IAAIS,EAAC,GAAI9B,GAAG,CAAC,KAAK;IAElB,IAAGoB,cAAc,CAACK,KAAK,CAACH,WAAW,GAAC,IAAI,EAAC;MACrCQ,EAAE,CAACL,KAAI,GAAI,IAAG;MACdL,cAAc,CAACK,KAAK,CAACH,WAAU,GAAI,CAACF,cAAc,CAACK,KAAK,CAACH,WAAW,GAAC,IAAI,EAAES,OAAO,CAAC,CAAC;IACxF;IACA,OAAM;MAACX,cAAc;MAACM,OAAO;MAACI;IAAE;EACpC,CAAC;EACDE,UAAU,EAAC,CAEX;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}