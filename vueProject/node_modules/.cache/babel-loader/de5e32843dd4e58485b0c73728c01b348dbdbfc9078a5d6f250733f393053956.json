{"ast":null,"code":"import navigation from \"@/components/Navigation.vue\";\nimport scenario_header from \"@/components/scenario/Header.vue\";\nimport dash1_footprint from \"@/components/scenario/dash1/totalCarbonFootprint.vue\";\nimport dash1_scopeChart from \"@/components/scenario/dash1/scopeRatio.vue\";\nimport dash1_predictChart from \"@/components/scenario/dash1/totalCarbonPredict.vue\";\nimport axios from \"axios\";\nimport { useStore } from \"vuex\";\nimport { computed, ref } from \"vue\";\nexport default {\n  name: \"scenario\",\n  components: {\n    navigation,\n    scenario_header,\n    dash1_footprint,\n    dash1_scopeChart,\n    dash1_predictChart\n  },\n  setup() {\n    const store = useStore();\n    var month = computed(() => store.state.insight_month + 1);\n    var year = computed(() => store.state.insight_year);\n    var scope1 = ref(0);\n    var scope2 = ref(0);\n    var scope3 = ref(0);\n    var total_emission = ref(0);\n    var rerender_signal = ref(0);\n    var group_list = computed(() => store.state.group_list).value;\n    var selected_company = ref(group_list[0]);\n    function change_company() {\n      store.commit(\"insight_select_company\", selected_company.value);\n      console.log(\"11111111111111111111111111111111\" + store.state.insight_selected_company);\n      get_total_emission_month();\n      get_total_emission_year();\n    }\n    async function get_total_emission_month() {\n      await axios.get(\"Company/Preview/\" + selected_company.value + \"/\" + year.value + \"-\" + month.value + \"-01/\" + year.value + \"-\" + month.value + \"-28\", config).then(res => {\n        console.log(res.data);\n        console.log(\"연월\" + year.value + month.value);\n        scope1.value = res.data.Scopes[0];\n        scope2.value = res.data.Scopes[1];\n        scope3.value = res.data.Scopes[2];\n        total_emission = res.data.Scopes.reduce((a, b) => a + b, 0);\n        store.commit(\"set_scopes\", res.data.Scopes);\n        store.commit(\"SetDetailEmission\", res.data.EmissionList);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n    async function get_total_emission_year() {\n      await axios.get(\"Company/Preview/\" + selected_company.value + \"/\" + year.value + \"-01-01/\" + year.value + \"-12-28\", config).then(res => {\n        console.log(res.data);\n        console.log(\"연월\" + year.value);\n        scope1.value = res.data.Scopes[0];\n        scope2.value = res.data.Scopes[1];\n        scope3.value = res.data.Scopes[2];\n        total_emission = res.data.Scopes.reduce((a, b) => a + b, 0);\n        store.commit(\"set_scopes\", res.data.Scopes);\n        store.commit(\"SetDetailEmission\", res.data.EmissionList);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n    return {\n      group_list,\n      selected_company,\n      change_company\n    };\n  }\n};","map":{"version":3,"names":["navigation","scenario_header","dash1_footprint","dash1_scopeChart","dash1_predictChart","axios","useStore","computed","ref","name","components","setup","store","month","state","insight_month","year","insight_year","scope1","scope2","scope3","total_emission","rerender_signal","group_list","value","selected_company","change_company","commit","console","log","insight_selected_company","get_total_emission_month","get_total_emission_year","get","config","then","res","data","Scopes","reduce","a","b","EmissionList","catch","error","finally"],"sources":["C:\\Users\\ohminjin\\Desktop\\캡스톤\\co2-emission-management\\vueProject\\src\\views\\Scenario\\carbonScenarioPreview.vue"],"sourcesContent":["<template>\r\n    <div class=\"measure-main\">\r\n        <navigation class=\"navigation\"/>\r\n        <div class=\"contents\">\r\n            <scenario_header/>\r\n            <div class=\"background\">\r\n              <div style=\"height:140vh;\">\r\n                <select class=\"select_group\" v-model=\"selected_company\" @change=\"change_company()\">\r\n                  <option v-for=\"item in group_list\" :key=\"item\">{{ item }}</option>\r\n                </select>\r\n                  <p class=\"header-page\" style=\"margin:0\">탄소 중립 시나리오 한눈에 보기<br>\r\n                      <span class=\"subHeader-page\">Predicted Carbon emission Overview</span>\r\n                  </p>\r\n                  <div>\r\n                    <div><dash1_footprint style=\"padding-top: 3vh;\"/></div>\r\n                    <div style=\"padding-top: 8vh;\"><dash1_scopeChart class=\"dash\"/></div>\r\n                    <div><dash1_predictChart class=\"dash\"/></div>\r\n                </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </template>\r\n  \r\n  \r\n  <style>\r\n\r\n  </style>\r\n  \r\n  <script>\r\n  import navigation from \"@/components/Navigation.vue\"\r\n  import scenario_header from \"@/components/scenario/Header.vue\"\r\n  import dash1_footprint from \"@/components/scenario/dash1/totalCarbonFootprint.vue\"\r\n  import dash1_scopeChart from \"@/components/scenario/dash1/scopeRatio.vue\"\r\n  import dash1_predictChart from \"@/components/scenario/dash1/totalCarbonPredict.vue\"\r\n  import axios from \"axios\"\r\n  import { useStore } from \"vuex\"\r\n  import {computed, ref} from \"vue\"\r\n  \r\n    export default {\r\n        name :\"scenario\",\r\n        components:{\r\n            navigation,\r\n            scenario_header,\r\n            dash1_footprint,\r\n            dash1_scopeChart,\r\n            dash1_predictChart\r\n        },\r\n        setup() {\r\n            const store = useStore();\r\n            var month = computed(() => store.state.insight_month+1);\r\n            var year = computed(() => store.state.insight_year);\r\n            var scope1 = ref(0)\r\n            var scope2 = ref(0)\r\n            var scope3 = ref(0)\r\n            var total_emission = ref(0)\r\n            var rerender_signal = ref(0)\r\n            var group_list = computed(() => store.state.group_list).value\r\n            var selected_company = ref(group_list[0])\r\n\r\n            function change_company(){\r\n                store.commit(\"insight_select_company\",selected_company.value);\r\n                console.log(\"11111111111111111111111111111111\"+ store.state.insight_selected_company)\r\n                get_total_emission_month()\r\n                get_total_emission_year()\r\n            }\r\n\r\n            async function get_total_emission_month(){\r\n                await axios.get(\"Company/Preview/\"+selected_company.value+\"/\"+year.value+\"-\"+month.value+\"-01/\"+year.value+\"-\"+month.value+\"-28\",config).then(res => {\r\n                    console.log(res.data)\r\n                    console.log(\"연월\"+year.value+month.value)\r\n                    scope1.value = res.data.Scopes[0]\r\n                    scope2.value = res.data.Scopes[1]\r\n                    scope3.value = res.data.Scopes[2]\r\n                    total_emission  = res.data.Scopes.reduce((a, b) => a + b, 0)\r\n                    store.commit(\"set_scopes\",res.data.Scopes);\r\n                    store.commit(\"SetDetailEmission\",res.data.EmissionList);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n                .finally(() => {\r\n                    rerender_signal.value +=1\r\n                })\r\n            }\r\n            async function get_total_emission_year(){\r\n                await axios.get(\"Company/Preview/\"+selected_company.value+\"/\"+year.value+\"-01-01/\"+year.value+\"-12-28\",config).then(res => {\r\n                    console.log(res.data)\r\n                    console.log(\"연월\"+year.value)\r\n                    scope1.value = res.data.Scopes[0]\r\n                    scope2.value = res.data.Scopes[1]\r\n                    scope3.value = res.data.Scopes[2]\r\n                    total_emission  = res.data.Scopes.reduce((a, b) => a + b, 0)\r\n                    store.commit(\"set_scopes\",res.data.Scopes);\r\n                    store.commit(\"SetDetailEmission\",res.data.EmissionList);\r\n                })\r\n                .catch(error => {\r\n                console.log(error)\r\n                })\r\n                .finally(() => {\r\n                rerender_signal.value +=1\r\n                })\r\n            }\r\n\r\n            return{\r\n                group_list, selected_company, change_company\r\n            }\r\n        }\r\n    }\r\n  </script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}