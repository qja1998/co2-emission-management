{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport targetdonut from \"@/components/nature/target/dash1/targetDonutGraph\";\nexport default {\n  name: \"target_dash1\",\n  components: {\n    targetdonut\n  },\n  setup() {\n    var store = useStore();\n    //그룹명\n    var group_name = computed(() => store.state.insight_selected_company);\n    var user_group = computed(() => store.state.user_group);\n    console.log(user_group.value);\n    var now = new Date(); // 현재 날짜 및 시간\n    var year = ref(now.getFullYear() - 1); // 년도\n    //서버\n    var server_category_data = [[580, 590, 640, 575, 573, 680, 250, 502, 600, 500, 120, 130], [530, 495, 486, 570, 573, 664, 250, 502, 600, 500, 120, 130], [495, 397, 480, 390, 475, 510, 250, 502, 600, 500, 120, 130], [498, 401, 420, 297, 361, 483, 250, 502, 600, 500, 120, 130], [381, 363, 321, 350, 348, 371, 250, 502, 600, 500, 120, 130], [140, 143, 184, 123, 120, 212, 250, 502, 600, 500, 120, 130], [208, 175, 143, 167, 160, 220, 250, 502, 600, 500, 120, 130], [312, 274, 250, 280, 278, 320, 250, 502, 600, 500, 120, 130], [312, 274, 250, 280, 278, 320, 250, 502, 600, 500, 120, 130], [312, 274, 250, 280, 278, 320, 250, 502, 600, 500, 120, 130], [312, 274, 250, 280, 278, 320, 250, 502, 600, 500, 120, 130]];\n    var sum_total_category_data = ref([]); //카테고리별 일년치 데이터\n\n    for (var i = 0; i < server_category_data.length; i++) {\n      var sum = ref(0);\n      for (var j = 0; j < server_category_data[i].length; j++) {\n        sum.value = server_category_data[i][j] + sum.value;\n      }\n      sum_total_category_data.value.push(sum.value);\n    }\n    var categoryLastEmission = [{\n      category: '고정연소',\n      emission: sum_total_category_data.value[0]\n    }, {\n      category: '이동연소',\n      emission: sum_total_category_data.value[1]\n    }, {\n      category: '탈루배출',\n      emission: sum_total_category_data.value[2]\n    }, {\n      category: '폐기물 처리시설',\n      emission: sum_total_category_data.value[3]\n    }, {\n      category: '비료사용',\n      emission: sum_total_category_data.value[4]\n    }, {\n      category: '대학동물소유',\n      emission: sum_total_category_data.value[5]\n    }, {\n      category: '산림에의한흡수',\n      emission: sum_total_category_data.value[6]\n    }, {\n      category: '전력',\n      emission: sum_total_category_data.value[7]\n    }, {\n      category: '열',\n      emission: sum_total_category_data.value[8]\n    }, {\n      category: '수도',\n      emission: sum_total_category_data.value[9]\n    }, {\n      category: '폐기물',\n      emission: sum_total_category_data.value[10]\n    }];\n    var activeColor = ['#9FD72A', '#FFA800', '#59CFE9', '#B67FBF', '#CA985E', '#F6DD00', '#3E9B96', '#5E8CFF', '#FF7D7D', '#088AA6', '#864887'];\n    return {\n      year,\n      categoryLastEmission,\n      activeColor\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","useStore","targetdonut","name","components","setup","store","group_name","state","insight_selected_company","user_group","console","log","value","now","Date","year","getFullYear","server_category_data","sum_total_category_data","i","length","sum","j","push","categoryLastEmission","category","emission","activeColor"],"sources":["/home/hyemi/carbon/co2-emission-management/vueProject/src/components/nature/target/dash1/dash1.vue"],"sourcesContent":["<template>\n    <div> \n        <div class=\"title-border\">전년도 카테고리별 탄소 배출량</div>\n        <div class=\"frame\" id=\"target_dash1_content\">\n            <div class=\"dash-text-middle\">{{ year }}년 카테고리별 탄소 배출량</div>\n            <targetdonut id=\"target-dount-graph\"></targetdonut>\n            <div class = \"target-dount-legend\" >\n                <div v-for=\"cate, i in categoryLastEmission\">\n                    <div class=\"legend-style\" :style=\"{ background:activeColor[i]}\"></div>{{ cate.category}}<span>{{ cate.emission }}kg</span>\n                </div>\n            </div>\n                \n        </div>\n    </div>\n        \n\n</template>\n\n<script>\nimport {ref, computed} from 'vue'\nimport {useStore} from 'vuex'\nimport targetdonut from \"@/components/nature/target/dash1/targetDonutGraph\"\n    export default {\n        name :\"target_dash1\",\n        components:{\n            targetdonut\n        },\n        setup(){\n            var store = useStore()\n            //그룹명\n            var group_name = computed(()=> store.state.insight_selected_company)\n            var user_group = computed(()=> store.state.user_group)\n            console.log(user_group.value)\n            var now = new Date();\t// 현재 날짜 및 시간\n            var year = ref(now.getFullYear()-1)\t// 년도\n            //서버\n            var server_category_data = [\n                [580, 590, 640, 575, 573, 680, 250,502,600,500,120,130],\n                [530, 495, 486, 570, 573, 664, 250,502,600,500,120,130],\n                [495, 397, 480, 390, 475, 510, 250,502,600,500,120,130],\n                [498, 401, 420, 297, 361, 483, 250,502,600,500,120,130],\n                [381, 363, 321, 350, 348, 371, 250,502,600,500,120,130],\n                [140, 143, 184, 123, 120, 212, 250,502,600,500,120,130],\n                [208, 175, 143, 167, 160, 220, 250,502,600,500,120,130],\n                [312, 274, 250, 280, 278, 320, 250,502,600,500,120,130],\n                [312, 274, 250, 280, 278, 320, 250,502,600,500,120,130],\n                [312, 274, 250, 280, 278, 320, 250,502,600,500,120,130],\n                [312, 274, 250, 280, 278, 320, 250,502,600,500,120,130],\n            ]\n            var sum_total_category_data = ref([]) //카테고리별 일년치 데이터\n\n            for(var i=0; i<server_category_data.length; i++){\n                var sum = ref(0)\n                for(var j =0; j<server_category_data[i].length; j++){\n                    sum.value = server_category_data[i][j] + sum.value\n                }    \n                sum_total_category_data.value.push(sum.value)\n            }\n            var categoryLastEmission = [\n                {category:'고정연소', emission:sum_total_category_data.value[0] },\n                {category:'이동연소', emission:sum_total_category_data.value[1] },\n                {category:'탈루배출', emission:sum_total_category_data.value[2] },\n                {category:'폐기물 처리시설', emission:sum_total_category_data.value[3] },\n                {category:'비료사용', emission:sum_total_category_data.value[4] },\n                {category:'대학동물소유', emission:sum_total_category_data.value[5] },\n                {category:'산림에의한흡수', emission:sum_total_category_data.value[6] },\n                {category:'전력', emission:sum_total_category_data.value[7] },\n                {category:'열', emission:sum_total_category_data.value[8] },\n                {category:'수도', emission:sum_total_category_data.value[9] },\n                {category:'폐기물', emission:sum_total_category_data.value[10] },\n            ]\n            var activeColor = [\n                '#9FD72A',\n                '#FFA800',\n                '#59CFE9',\n                '#B67FBF',\n                '#CA985E',\n                '#F6DD00',\n                '#3E9B96',\n                '#5E8CFF',\n                '#FF7D7D',\n                '#088AA6',\n                '#864887'\n            ]\n            return{\n                year,\n                categoryLastEmission,\n                activeColor,\n            }\n        }\n    }\n</script>\n\n<style>\n.dash-text-middle{\n    font-size:2.5vh;\n    width:inherit;\n    text-align: center;\n    margin-top:2vh;\n    font-weight: bold;\n    color:#5A5A5A;\n}\n#target_dash1_content{\n    width:40vw;\n    height: 50vh;\n}\n#target-dount-graph{\n    display:inline-block;\n    float: left;\n    width:20vw;\n    height: 30vh;\n    margin-top:7vh;\n    \n}\n.target-dount-legend{\n    overflow: auto;\n    height:30vh;\n    width: 17vw;\n    margin-top:7vh;\n    margin-left:2vw;\n    display: inline-block;\n}\n.target-dount-legend > div{\n    margin-bottom:4vh;\n    font-size:1.6vh;\n    font-weight: bolder;\n    color:#5A5A5A;\n}\n.target-dount-legend  span{\n    float: right;\n}\n.legend-style{\n    display:inline-block;\n    height:1vh;\n    width:1vh;\n    border-radius: 50%;\n    background: #5A5A5A;\n    margin-right:1vw;\n    \n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}