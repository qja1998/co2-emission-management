{"ast":null,"code":"import evaluationDonutGraph from './evaluationDonutGraph.ts';\nimport evaluationStickGraph from './evaluationStickGraph';\nimport { ref, computed } from 'vue';\nexport default {\n  name: \"dashboard1_evaluation\",\n  components: {\n    // eslint-disable-next-line vue/no-unused-components\n    evaluationDonutGraph,\n    evaluationStickGraph\n  },\n  setup() {\n    //그룹명, 날짜\n    var user_group = computed(() => store.state.user_group);\n    var group_name = computed(() => store.state.insight_selected_company);\n    var now = new Date(); // 현재 날짜 및 시간\n    var year = ref(now.getFullYear()); // 년도\n\n    const standardData = ref(true); //기준량 여기로 받아오기. (기준량 > 작년 탄소배출량 : evaluationDecreaseGraph, 기준량 < 작년 탄소 배출량 : evaluationIncreaseGraph)\n    const realData = ref(20); // 작년 탄소 배출량(%)\n\n    //서버\n    var server_total_data = [20, 50, 60, 40, 20, 30, 50, 50, 40, 20, 30, 60];\n    var sum = ref(0);\n    for (var i = 0; i < server_total_data.length; i++) {\n      sum.value = server_total_data[i] + sum.value;\n    }\n    var server_evaluation = {\n      BaseYear: 2019,\n      BaseEmissions: 980\n    };\n    realData.value = (server_evaluation.BaseEmissions - sum.value) / server_evaluation.BaseEmissions * 100;\n    console.log(realData.value);\n    if (server_evaluation.BaseEmissions != 0) {\n      standardData.value = true;\n    } else {\n      standardData.value = false;\n    }\n    return {\n      standardData,\n      realData,\n      year\n    };\n  }\n};","map":{"version":3,"names":["evaluationDonutGraph","evaluationStickGraph","ref","computed","name","components","setup","user_group","store","state","group_name","insight_selected_company","now","Date","year","getFullYear","standardData","realData","server_total_data","sum","i","length","value","server_evaluation","BaseYear","BaseEmissions","console","log"],"sources":["C:\\Users\\user\\Desktop\\CarbonVueproject\\co2-emission-management\\vueProject\\src\\components\\evaluation\\dash1\\dashboard1_evaluation.vue"],"sourcesContent":["<template>\r\n    <div style=\"float:left; \">\r\n        <div class=\"dash_title\" >전년도 탄소 배출량 평가</div>\r\n        <div class=\"dashboard\" id=\"evaluation-dash1\">\r\n            <div class = \"dashFalse\" v-if = \"standardData == false\">\r\n                <img class=\"nonData-img\" src=\"@/assets/evaluationGraph/NonData.png\" alt=\"기준 연도를 입력해주세요.\">\r\n            </div>\r\n            <div v-else-if = \"standardData == true\">\r\n                <div class=\"dash-text\" style=\"text-align: center; height:10vh; line-height: 10vh;\">{{year-1}}년 탄소 배출량 평가</div>\r\n                <evaluationDonutGraph style=\"height: 50vh\"></evaluationDonutGraph>\r\n            </div>\r\n            <div class=\"measure\" >\r\n                <span id=\"measure-issue\" style=\"background-color: #3DC984; color: white;\" v-if=\"realData < 0\">나쁨</span>\r\n                <span id=\"measure-issue\" style=\"background-color: white;\" v-else>나쁨</span>\r\n                <span id=\"measure-issue\" style=\"background-color: #3DC984; color: white;\" v-if=\"realData < 10\">미흡</span>\r\n                <span id=\"measure-issue\" style=\"background-color: white;\" v-else>미흡</span>\r\n                <span id=\"measure-issue\" style=\"background-color: #3DC984; color: white;\" v-if=\"realData < 30\">양호</span>\r\n                <span id=\"measure-issue\" style=\"background-color: white;\" v-else>양호</span>\r\n                <span id=\"measure-issue\" style=\"background-color: #3DC984; color: white;\" v-if=\"realData >= 30\">좋음</span>\r\n                <span id=\"measure-issue\" style=\"background-color: white;\" v-else>좋음</span>\r\n\r\n            </div>\r\n            <div class = \"stick\">\r\n                <evaluationStickGraph style=\"height: 8vh\"></evaluationStickGraph>\r\n            </div>\r\n            <div class=\"notice\">* 0% 이하 감소 : 나쁨 | 0~9% 감소 : 미흡 | 10~29% 감소 : 양호 | 30% 이상 감소 : 좋음</div>\r\n        </div>\r\n    </div>\r\n    \r\n</template>\r\n\r\n<style>\r\n#evaluation-dash1{\r\n    width: 40vw;\r\n    height: 84vh;\r\n}\r\n.dashFalse{\r\n    width: 40vw;\r\n    height: 95vh;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n}\r\n.nonData-img{\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n}\r\n.stick{\r\n    margin: 1.5vh 3% 0 3%;\r\n}\r\n.measure {\r\n    font-size: 0.8vw;\r\n    width: inherit;\r\n    height: 5vh;\r\n    margin-left: 4%;\r\n}\r\n\r\n#measure-issue {\r\n    width: 21.5%;\r\n    height: 100%;\r\n\r\n    display: inline-block;\r\n    text-align: left;\r\n    text-indent: 1vw;\r\n    line-height: 5vh;\r\n    margin-left: 0.4vw;\r\n    border: 1px solid #D0D0D0;\r\n    border-radius: 5px;\r\n}\r\n\r\n.notice {\r\n    margin-top:5vh;\r\n    margin-right: 1vw;\r\n    text-align: right; \r\n    font-size: 0.7vw; \r\n    color: #5A5A5A;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport evaluationDonutGraph from './evaluationDonutGraph.ts';\r\nimport evaluationStickGraph from './evaluationStickGraph';\r\nimport {ref,computed} from 'vue'\r\n\r\n  export default {\r\n      name :\"dashboard1_evaluation\",\r\n      components:{\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    evaluationDonutGraph,\r\n    evaluationStickGraph\r\n},\r\n      setup() {\r\n\r\n        //그룹명, 날짜\r\n        var user_group = computed(()=> store.state.user_group)\r\n        var group_name = computed(()=> store.state.insight_selected_company)\r\n        var now = new Date();\t// 현재 날짜 및 시간\r\n        var year = ref(now.getFullYear())\t// 년도\r\n\r\n        const standardData = ref(true) //기준량 여기로 받아오기. (기준량 > 작년 탄소배출량 : evaluationDecreaseGraph, 기준량 < 작년 탄소 배출량 : evaluationIncreaseGraph)\r\n        const realData = ref(20) // 작년 탄소 배출량(%)\r\n\r\n        //서버\r\n        var server_total_data = [20,50,60,40,20,30,50,50,40,20,30,60]\r\n        var sum =ref(0)\r\n        for(var i=0; i<server_total_data.length; i++){\r\n            sum.value = server_total_data[i] + sum.value\r\n        }\r\n\r\n        var server_evaluation = {BaseYear:2019, BaseEmissions:980}\r\n\r\n        realData.value = (server_evaluation.BaseEmissions-sum.value)/(server_evaluation.BaseEmissions) *100\r\n\r\n        console.log(realData.value)\r\n        if(server_evaluation.BaseEmissions!=0){\r\n            standardData.value=true\r\n        }\r\n        else{\r\n            standardData.value=false\r\n        }\r\n\r\n       \r\n         return{\r\n            standardData, realData,year\r\n         }\r\n        }\r\n  }\r\n</script>\r\n  "],"mappings":"AAgFA,OAAOA,oBAAmB,MAAO,2BAA2B;AAC5D,OAAOC,oBAAmB,MAAO,wBAAwB;AACzD,SAAQC,GAAG,EAACC,QAAQ,QAAO,KAAI;AAE7B,eAAe;EACXC,IAAG,EAAG,uBAAuB;EAC7BC,UAAU,EAAC;IACb;IACAL,oBAAoB;IACpBC;EACJ,CAAC;EACKK,KAAKA,CAAA,EAAG;IAEN;IACA,IAAIC,UAAS,GAAIJ,QAAQ,CAAC,MAAKK,KAAK,CAACC,KAAK,CAACF,UAAU;IACrD,IAAIG,UAAS,GAAIP,QAAQ,CAAC,MAAKK,KAAK,CAACC,KAAK,CAACE,wBAAwB;IACnE,IAAIC,GAAE,GAAI,IAAIC,IAAI,EAAE,EAAE;IACtB,IAAIC,IAAG,GAAIZ,GAAG,CAACU,GAAG,CAACG,WAAW,EAAE,GAAE;;IAElC,MAAMC,YAAW,GAAId,GAAG,CAAC,IAAI,GAAE;IAC/B,MAAMe,QAAO,GAAIf,GAAG,CAAC,EAAE,GAAE;;IAEzB;IACA,IAAIgB,iBAAgB,GAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE;IAC5D,IAAIC,GAAE,GAAGjB,GAAG,CAAC,CAAC;IACd,KAAI,IAAIkB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACF,iBAAiB,CAACG,MAAM,EAAED,CAAC,EAAE,EAAC;MACzCD,GAAG,CAACG,KAAI,GAAIJ,iBAAiB,CAACE,CAAC,IAAID,GAAG,CAACG,KAAI;IAC/C;IAEA,IAAIC,iBAAgB,GAAI;MAACC,QAAQ,EAAC,IAAI;MAAEC,aAAa,EAAC;IAAG;IAEzDR,QAAQ,CAACK,KAAI,GAAI,CAACC,iBAAiB,CAACE,aAAa,GAACN,GAAG,CAACG,KAAK,IAAGC,iBAAiB,CAACE,aAAa,GAAG,GAAE;IAElGC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAACK,KAAK;IAC1B,IAAGC,iBAAiB,CAACE,aAAa,IAAE,CAAC,EAAC;MAClCT,YAAY,CAACM,KAAK,GAAC,IAAG;IAC1B,OACI;MACAN,YAAY,CAACM,KAAK,GAAC,KAAI;IAC3B;IAGC,OAAM;MACHN,YAAY;MAAEC,QAAQ;MAACH;IAC1B;EACD;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}