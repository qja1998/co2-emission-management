{"ast":null,"code":"import evaluationDonutGraph from './evaluationDonutGraph.ts';\nimport evaluationStickGraph from './evaluationStickGraph';\nimport { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: \"dashboard1_evaluation\",\n  components: {\n    // eslint-disable-next-line vue/no-unused-components\n    evaluationDonutGraph,\n    evaluationStickGraph\n  },\n  setup() {\n    //그룹명, 날짜\n    var now = new Date(); // 현재 날짜 및 시간\n    var lastyear = ref(now.getFullYear() - 1); // 년도\n    var store = useStore();\n    const standardData = ref(true); //기준량 여기로 받아오기. (기준량 > 작년 탄소배출량 : evaluationDecreaseGraph, 기준량 < 작년 탄소 배출량 : evaluationIncreaseGraph)\n    const realData = ref(0); // 작년 탄소 배출량(%)\n\n    var baseYear = ref(0);\n    var baseEmissions = ref(0);\n    var group_name = computed(() => store.state.group_name);\n\n    //서버\n\n    async function get_Base_Info() {\n      var url = \"/CarbonNature/Evaluation/\" + group_name.value;\n      axios.get(url, config).then(res => {\n        baseYear.value = res.data.BaseYear;\n        baseEmissions.value = res.data.BaseEmissions;\n      }).catch(error => {\n        console.log(error);\n        store.commit('getBaseYear', 0);\n        store.commit('getBaseData', 0);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n\n    //합산 함수\n    function sumfun(list) {\n      var sum = ref(0);\n      for (var i = 0; i < list.length; i++) {\n        sum.value = list[i] + sum.value;\n      }\n      return sum.value;\n    }\n\n    // 해당 조직의 작년 총 탄소 배출량\n    async function get_total_data() {\n      var url = \"/CarbonEmission/PartEmission/\" + group_name.value + \"/\" + lastyear.value + \"-01-01/\" + lastyear.value + \"-12-28/0\";\n      axios.get(url, config).then(res => {\n        store.commit('getTotalLastData', sumfun(res.data));\n        store.commit('getTotalLastDataList', res.data);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        rerender_signal.value += 1;\n      });\n    }\n    get_Base_Info();\n    var sum = computed(() => store.state.getTotalLastData);\n    realData.value = (baseEmissions.value - sum.value) / baseEmissions.value * 100;\n    console.log(baseYear.value, \"d\", baseEmissions.value);\n    if (baseEmissions.value != 0) {\n      standardData.value = true;\n    } else {\n      standardData.value = false;\n    }\n    return {\n      standardData,\n      realData,\n      year,\n      baseYear,\n      baseEmissions\n    };\n  }\n};","map":{"version":3,"names":["evaluationDonutGraph","evaluationStickGraph","ref","computed","useStore","name","components","setup","now","Date","lastyear","getFullYear","store","standardData","realData","baseYear","baseEmissions","group_name","state","get_Base_Info","url","value","axios","get","config","then","res","data","BaseYear","BaseEmissions","catch","error","console","log","commit","finally","rerender_signal","sumfun","list","sum","i","length","get_total_data","getTotalLastData","year"],"sources":["C:\\Users\\user\\Desktop\\CarbonVueproject\\co2-emission-management\\vueProject\\src\\components\\evaluation\\dash1\\dashboard1_evaluation.vue"],"sourcesContent":["<template>\r\n    <div style=\"float:left; \">\r\n        <div class=\"dash_title\" >전년도 탄소 배출량 평가</div>\r\n        <div class=\"dashboard\" id=\"evaluation-dash1\">\r\n            <div class = \"dashFalse\" v-if = \"standardData == false\">\r\n                <img class=\"nonData-img\" src=\"@/assets/evaluationGraph/NonData.png\" alt=\"기준 연도를 입력해주세요.\">\r\n            </div>\r\n            <div v-else-if = \"standardData == true\">\r\n                <div class=\"dash-text\" style=\"text-align: center; height:10vh; line-height: 10vh;\">{{year-1}}년 탄소 배출량 평가</div>\r\n                <Suspense>\r\n                    <evaluationDonutGraph style=\"height: 50vh\"></evaluationDonutGraph>\r\n                </Suspense>\r\n\r\n            </div>\r\n            <div class=\"measure\" >\r\n                \r\n                <span :class=\"{'measureissue': realData>=0,'activMeasure' : realData<0}\" >나쁨</span>\r\n                <span :class=\"{'measureissue': realData<0 || realData >=10,'activMeasure' : 0<=realData && realData<10}\" >미흡</span>\r\n                <span :class=\"{'measureissue': realData<10 || realData >=30,'activMeasure' : 10<=realData && realData <30}\" >양호</span>\r\n                <span :class=\"{'measureissue': realData<10,'activMeasure' : 30<=realData}\" >좋음</span>\r\n            </div>\r\n            <div class = \"stick\">\r\n                <evaluationStickGraph style=\"height: 8vh\"></evaluationStickGraph>\r\n            </div>\r\n            <div class=\"notice\">* 0% 이하 감소 : 나쁨 | 0~9% 감소 : 미흡 | 10~29% 감소 : 양호 | 30% 이상 감소 : 좋음</div>\r\n        </div>\r\n    </div>\r\n    \r\n</template>\r\n\r\n<style>\r\n#evaluation-dash1{\r\n    width: 40vw;\r\n    height: 84vh;\r\n}\r\n.dashFalse{\r\n    width: 40vw;\r\n    height: 95vh;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n}\r\n.nonData-img{\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n}\r\n.stick{\r\n    margin: 1.5vh 3% 0 3%;\r\n}\r\n.measure {\r\n    font-size: 0.8vw;\r\n    width: inherit;\r\n    height: 5vh;\r\n    margin-left: 4%;\r\n}\r\n\r\n.measureissue {\r\n    width: 21.5%;\r\n    height: 100%;\r\n\r\n    display: inline-block;\r\n    text-align: left;\r\n    text-indent: 1vw;\r\n    line-height: 5vh;\r\n    margin-left: 0.4vw;\r\n    border: 1px solid #D0D0D0;\r\n    border-radius: 5px;\r\n    background:white;\r\n}\r\n.activMeasure{\r\n    width: 21.5%;\r\n    height: 100%;\r\n    display: inline-block;\r\n    text-align: left;\r\n    text-indent: 1vw;\r\n    line-height: 5vh;\r\n    margin-left: 0.4vw;\r\n    border: 1px solid #D0D0D0;\r\n    border-radius: 5px;\r\n    background:#3DC984;\r\n}\r\n\r\n.notice {\r\n    margin-top:5vh;\r\n    margin-right: 1vw;\r\n    text-align: right; \r\n    font-size: 0.7vw; \r\n    color: #5A5A5A;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport evaluationDonutGraph from './evaluationDonutGraph.ts';\r\nimport evaluationStickGraph from './evaluationStickGraph';\r\nimport {ref,computed} from 'vue'\r\nimport {useStore} from 'vuex'\r\n  export default {\r\n      name :\"dashboard1_evaluation\",\r\n      components:{\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    evaluationDonutGraph,\r\n    evaluationStickGraph\r\n},\r\n      setup() {\r\n\r\n        //그룹명, 날짜\r\n        var now = new Date();\t// 현재 날짜 및 시간\r\n        var lastyear = ref(now.getFullYear()-1) \t// 년도\r\n        var store = useStore()\r\n        const standardData = ref(true) //기준량 여기로 받아오기. (기준량 > 작년 탄소배출량 : evaluationDecreaseGraph, 기준량 < 작년 탄소 배출량 : evaluationIncreaseGraph)\r\n        const realData = ref(0) // 작년 탄소 배출량(%)\r\n\r\n        var baseYear = ref(0)\r\n        var baseEmissions = ref(0)\r\n        var group_name = computed(()=> store.state.group_name)\r\n\r\n        //서버\r\n\r\n        async function get_Base_Info(){\r\n            var url = \"/CarbonNature/Evaluation/\"+group_name.value\r\n                axios.get(url,config).then(res=>{\r\n                    baseYear.value = res.data.BaseYear\r\n                    baseEmissions.value = res.data.BaseEmissions\r\n            })\r\n            .catch(error => {\r\n            console.log(error)\r\n                store.commit('getBaseYear',0)\r\n                store.commit('getBaseData',0)\r\n            })\r\n            .finally(()=>{\r\n                rerender_signal.value +=1\r\n            })\r\n        }\r\n\r\n        //합산 함수\r\n        function sumfun(list){\r\n            var sum =ref(0)\r\n            for(var i=0; i<list.length; i++){\r\n                sum.value = list[i] + sum.value\r\n            }\r\n            return sum.value\r\n        }\r\n        \r\n        // 해당 조직의 작년 총 탄소 배출량\r\n        async function get_total_data(){\r\n            var url = \"/CarbonEmission/PartEmission/\"+group_name.value+\"/\"+(lastyear.value)+\"-01-01/\"+(lastyear.value)+\"-12-28/0\"\r\n                axios.get(url,config).then(res=>{\r\n                store.commit('getTotalLastData',sumfun(res.data))\r\n                store.commit('getTotalLastDataList',res.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n            .finally(()=>{\r\n                rerender_signal.value +=1\r\n            })\r\n        }\r\n        get_Base_Info()\r\n        var sum =computed(()=> store.state.getTotalLastData)\r\n        realData.value = (baseEmissions.value-sum.value)/(baseEmissions.value) *100\r\n\r\n\r\n\r\n   \r\n\r\n        console.log(baseYear.value,\"d\",baseEmissions.value)\r\n        if(baseEmissions.value!=0){\r\n            standardData.value=true\r\n        }\r\n        else{\r\n            standardData.value=false\r\n        }\r\n\r\n         return{\r\n            standardData, realData,year,baseYear,baseEmissions\r\n         }\r\n        }\r\n  }\r\n</script>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}