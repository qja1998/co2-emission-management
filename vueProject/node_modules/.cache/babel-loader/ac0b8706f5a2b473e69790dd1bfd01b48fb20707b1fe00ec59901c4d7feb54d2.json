{"ast":null,"code":"import progressDonutGraph from './progressDonutGraph';\nimport { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: \"progress_dash1\",\n  components: {\n    progressDonutGraph\n  },\n  setup() {\n    var store = useStore();\n    //날짜 그룹명\n    var user_group = computed(() => store.state.user_group);\n    var selected_company = computed(() => store.state.insight_selected_company);\n    var now = new Date(); // 현재 날짜 및 시간\n    var year = ref(now.getFullYear()); // 년도\n    var month = ref(now.getMonth()); //월\n\n    //서버\n\n    const config = {\n      headers: {\n        Authorization: \"Bearer\" + \" \" + store.state.accessToken\n      }\n    };\n    async function get_total_category_data() {\n      var url = \"/CarbonEmission/PartEmission/\" + selected_company.value + \"/\" + year.value + \"-01-01/\" + year.value + \"-\" + month.value + \"-28/1\";\n      axios.get(url, config).then(res => {\n        console.log('dash1 total data', res.data);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {});\n    }\n    get_total_category_data();\n    var server_total_data = [20, 10, 30, 50, 40, 20, 20, 40, 10, 60, 20, 50];\n    var server_targetTotal_data = 570;\n    var sum = ref(0); //작년 총 탄소 배출량\n\n    for (var i = 0; i < server_total_data.length; i++) {\n      sum.value = server_total_data[i] + sum.value;\n    }\n    var carbonEmissions = sum;\n    var carbonEmissionsGoal = server_targetTotal_data;\n    return {\n      carbonEmissions,\n      carbonEmissionsGoal,\n      year\n    };\n  }\n};","map":{"version":3,"names":["progressDonutGraph","ref","computed","useStore","axios","name","components","setup","store","user_group","state","selected_company","insight_selected_company","now","Date","year","getFullYear","month","getMonth","config","headers","Authorization","accessToken","get_total_category_data","url","value","get","then","res","console","log","data","catch","error","finally","server_total_data","server_targetTotal_data","sum","i","length","carbonEmissions","carbonEmissionsGoal"],"sources":["C:\\Users\\user\\Desktop\\CarbonVueproject\\co2-emission-management\\vueProject\\src\\components\\nature\\progress\\dash1\\dash1.vue"],"sourcesContent":["<template>\r\n    <div> \r\n        <div class=\"title-border\">감축 목표 대비 현재 총 탄소 배출량</div>\r\n        <div class=\"frame\"  style=\"height:77vh; width:25vw\">\r\n            <div class=\"dash-text-middle\" style=\"font-size:2.5rem\">〈 {{year}}년 〉</div>\r\n            <div id=\"progress-dash1-graph\">\r\n                <progressDonutGraph style=\"height:inherit\"></progressDonutGraph>\r\n            </div>\r\n            <div style=\"margin-left:3vw\">\r\n                <div class=\"dash-text-middle progress-dash1-text\">현재 총 탄소 배출량\r\n                    <div class=\"dash-text progress-dash1-emission-text\">{{carbonEmissions}} <span>CO2eq</span></div>\r\n                </div>\r\n                <div class=\"dash-text-middle progress-dash1-text\" style=\"margin-top:5vh;\">감축 목표 탄소 배출량\r\n                    <div  class=\"dash-text progress-dash1-emission-text\" id =\"goal-text\">{{carbonEmissionsGoal}} <span>CO2eq</span></div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n        \r\n\r\n</template>\r\n\r\n<script>\r\nimport progressDonutGraph from './progressDonutGraph';\r\nimport {ref,computed} from 'vue'\r\nimport {useStore} from 'vuex'\r\nimport axios from 'axios'\r\n    export default {\r\n        name :\"progress_dash1\",\r\n        components:{\r\n            progressDonutGraph\r\n        },\r\n        setup(){\r\n            var store =useStore()\r\n            //날짜 그룹명\r\n            var user_group = computed(()=> store.state.user_group)\r\n            var selected_company = computed(()=> store.state.insight_selected_company)\r\n\r\n            var now = new Date();\t// 현재 날짜 및 시간\r\n            var year = ref(now.getFullYear())\t// 년도\r\n            var month = ref(now.getMonth()) //월\r\n\r\n            //서버\r\n\r\n            const config = {\r\n                headers:{\r\n                    Authorization:\"Bearer\"+\" \"+store.state.accessToken,\r\n                }\r\n            }\r\n\r\n            async function get_total_category_data(){\r\n                var url = \"/CarbonEmission/PartEmission/\"+selected_company.value+\"/\"+(year.value)+\"-01-01/\"+(year.value)+\"-\"+month.value+\"-28/1\"\r\n                axios.get(url,config).then(res=>{\r\n                    console.log('dash1 total data',res.data)\r\n                    })\r\n                    .catch(error => {\r\n                    console.log(error)\r\n                    })\r\n                    .finally(()=>{\r\n                })\r\n            }\r\n            get_total_category_data()\r\n\r\n            var server_total_data = [20,10,30,50,40,20,20,40,10,60,20,50]\r\n            var server_targetTotal_data = 570\r\n            var sum =ref(0) //작년 총 탄소 배출량\r\n\r\n            for(var i=0; i<server_total_data.length; i++){\r\n                sum.value = server_total_data[i] + sum.value\r\n            }\r\n\r\n            \r\n            var carbonEmissions =sum\r\n            var carbonEmissionsGoal = server_targetTotal_data\r\n\r\n            return{\r\n                carbonEmissions,\r\n                carbonEmissionsGoal,\r\n                year\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n.dash-text-small{\r\n    margin:4vh 3vw;\r\n    color:#5A5A5A;\r\n    font-size:2vh;\r\n    font-weight: bold;\r\n}\r\n.progress-dash1-emission-text{\r\n    height:3vh; \r\n    line-height: 3vh; \r\n    margin:2vh 0;\r\n    font-size:3.7vh;\r\n    color:#163945\r\n}\r\n.progress-dash1-text{\r\n    text-align:left; \r\n    margin-top:0vh; \r\n    font-size:1.1rem\r\n}\r\n#goal-text{\r\n    color:#3DC984\r\n}\r\n#progress-dash1-graph{\r\n    width:17vw; \r\n    height:35vh;\r\n    padding:2vh 4vw 4vh;\r\n    margin-top:1vh;\r\n}\r\n</style>"],"mappings":"AAwBA,OAAOA,kBAAiB,MAAO,sBAAsB;AACrD,SAAQC,GAAG,EAACC,QAAQ,QAAO,KAAI;AAC/B,SAAQC,QAAQ,QAAO,MAAK;AAC5B,OAAOC,KAAI,MAAO,OAAM;AACpB,eAAe;EACXC,IAAG,EAAG,gBAAgB;EACtBC,UAAU,EAAC;IACPN;EACJ,CAAC;EACDO,KAAKA,CAAA,EAAE;IACH,IAAIC,KAAI,GAAGL,QAAQ,EAAC;IACpB;IACA,IAAIM,UAAS,GAAIP,QAAQ,CAAC,MAAKM,KAAK,CAACE,KAAK,CAACD,UAAU;IACrD,IAAIE,gBAAe,GAAIT,QAAQ,CAAC,MAAKM,KAAK,CAACE,KAAK,CAACE,wBAAwB;IAEzE,IAAIC,GAAE,GAAI,IAAIC,IAAI,EAAE,EAAE;IACtB,IAAIC,IAAG,GAAId,GAAG,CAACY,GAAG,CAACG,WAAW,EAAE,GAAE;IAClC,IAAIC,KAAI,GAAIhB,GAAG,CAACY,GAAG,CAACK,QAAQ,EAAE,GAAE;;IAEhC;;IAEA,MAAMC,MAAK,GAAI;MACXC,OAAO,EAAC;QACJC,aAAa,EAAC,QAAQ,GAAC,GAAG,GAACb,KAAK,CAACE,KAAK,CAACY;MAC3C;IACJ;IAEA,eAAeC,uBAAuBA,CAAA,EAAE;MACpC,IAAIC,GAAE,GAAI,+BAA+B,GAACb,gBAAgB,CAACc,KAAK,GAAC,GAAG,GAAEV,IAAI,CAACU,KAAM,GAAC,SAAS,GAAEV,IAAI,CAACU,KAAM,GAAC,GAAG,GAACR,KAAK,CAACQ,KAAK,GAAC,OAAM;MAC/HrB,KAAK,CAACsB,GAAG,CAACF,GAAG,EAACL,MAAM,CAAC,CAACQ,IAAI,CAACC,GAAG,IAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACF,GAAG,CAACG,IAAI;MACvC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QAChBJ,OAAO,CAACC,GAAG,CAACG,KAAK;MACjB,CAAC,EACAC,OAAO,CAAC,MAAI,CACjB,CAAC;IACL;IACAX,uBAAuB,EAAC;IAExB,IAAIY,iBAAgB,GAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE;IAC5D,IAAIC,uBAAsB,GAAI,GAAE;IAChC,IAAIC,GAAE,GAAGpC,GAAG,CAAC,CAAC,GAAE;;IAEhB,KAAI,IAAIqC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACH,iBAAiB,CAACI,MAAM,EAAED,CAAC,EAAE,EAAC;MACzCD,GAAG,CAACZ,KAAI,GAAIU,iBAAiB,CAACG,CAAC,IAAID,GAAG,CAACZ,KAAI;IAC/C;IAGA,IAAIe,eAAc,GAAGH,GAAE;IACvB,IAAII,mBAAkB,GAAIL,uBAAsB;IAEhD,OAAM;MACFI,eAAe;MACfC,mBAAmB;MACnB1B;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}