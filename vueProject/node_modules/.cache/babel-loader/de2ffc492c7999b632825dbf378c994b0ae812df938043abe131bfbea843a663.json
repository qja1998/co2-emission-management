{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"'canvas-${index}'\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"canvas\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\ohminjin\\Desktop\\캡스톤\\co2-emission-management\\vueProject\\src\\components\\evaluation\\dash3\\graph.vue"],"sourcesContent":["<template>\r\n    <canvas id=\"'canvas-${index}'\"></canvas>\r\n</template>\r\n\r\n<script>\r\nimport {Chart, LineElement, PointElement, LineController, CategoryScale, LinearScale, LogarithmicScale, RadialLinearScale, TimeScale, Decimation, Filler, Title, Tooltip} from 'chart.js'\r\nimport annotationPlugin from 'chartjs-plugin-annotation'\r\n\r\nChart.register{\r\n    LineElement,\r\n    PointElement,\r\n    LineController,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LogarithmicScale,\r\n    RadialLinearScale,\r\n    TimeScale,\r\n    Decimation,\r\n    Filler,\r\n    Title,\r\n    Tooltip,\r\n    annotationPlugin\r\n}\r\n\r\nexport default {\r\n    props: {\r\n        charData: {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','Setember','October','November','December'],\r\n            datasets: [\r\n                {\r\n                    label:'총 탄소 배출량',\r\n                    data: [530, 495, 486, 570, 573, 664, 667, 663, 660, 670, 673, 750],\r\n                    backgroundColor : '#3DC984',\r\n                    barThickness: 30,\r\n                },\r\n            ]\r\n        },\r\n        chartOptions: {\r\n            type: Object,\r\n            default: null\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            myChart: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fillData()\r\n    },\r\n    methods: {\r\n        fillData() {\r\n            const ctx = document.getElementById('canvas-${this.index}').getContext('2d')\r\n            this.myChart = new Chart(ctx, {\r\n                type: 'bar',\r\n                data = this.charData,\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    plugins:{\r\n                        legend:{\r\n                            display:true,\r\n                            position:'top',\r\n                        },\r\n                        annotation: {\r\n                            annotations: {\r\n                                line1: {\r\n                                    type: 'line',\r\n                                    xMin: 590,\r\n                                    yMax: 590,\r\n                                    borderColor: '#FF3B3B',\r\n                                    borderWidth: 2\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    scales:{\r\n                        x:{\r\n                            grid:{\r\n                                display:false\r\n                            }\r\n                        },\r\n                        y:{\r\n                            stacked:true,\r\n                            display:true,\r\n                        },\r\n                    },\r\n                }\r\n            })\r\n        },\r\n        updateChart(){\r\n            if (this.myChart) this.myChart.destroy()\r\n            this.fillData()\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";;EACYA,EAAE,EAAC;AAAmB;;uBAA9BC,mBAAA,CAAwC,UAAxCC,UAAwC"},"metadata":{},"sourceType":"module","externalDependencies":[]}